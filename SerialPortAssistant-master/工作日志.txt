06B5:
开机：
echo 1 > /mc2017/dev/4G_pwr ; sleep 2; echo 0 > /mc2017/dev/4G_pwr
完成后不超过一秒应该可以用lsusb -t看到装上去的USB设备，应该有7个，形成6个系统设备：一个网卡和5个串口

关机：
echo 1 > /mc2017/dev/4G_pwr ; sleep 5; echo 0 > /mc2017/dev/4G_pwr

硬件开关说明书要求是：1秒以上开机；4秒以上关机
关机后，那6个设备就不见了

AT+CGDCONT=1,"IP","data.tre.se"
AT+CGDCONT=
AT+CGDCONT=1,”IP”,”3GWAP”

AT+CGDCONT=1,"IP","CMNET"
1:表示使用第一种配置方案
IP:表示协议
CMNET:APN

minicom -D /dev/ttyUSB2
AT+CREG?

联通4G手机参数：

APN（接入点、访问点）：3gwap/3GWAP   uninet   移动 :CMWAP  电信:CTNET

代理服务器地址：10.0.0.172

端口：80。

用户名：（可空）

密码：（可空）。

华为模块有个自己的机制，比ppp好，你只要按链接里说的配置好，然后AT^NDISDUP=1,1,
那个cdc网口wwan0就可用了，可以直接用udhcpc -i wwan0让它分配地址，或者更优雅点，
在/etc/network/下面写好各种脚本和配置，然后一个ifup/ifdown就可以完成所有事了。

下电：
ifconfig wwan0 down
AT^NDISDUP=1,0,


写4个脚本，实现模块上电/下电，4G连接/断开。需要有错误代码返回（0:成功）
另外写脚本读取当前状态：是否在线/服务商/信号强度


GSM/3GPP标准里有。
运营商：AT+COPS?
在线：AT+CFUN?
信号强度：AT+CSQ   测试:AT+CSQ=?

AT+CGREG-注册 PS 域状态
AT+CREG-注册网络

关闭发送:AT^CURC=0

busybox chat TIMEOUT 1 ECHO ON "" AT OK "AT+COPS?\r\n" OK "" </dev/ttyUSB0 2>&1 1>/dev/ttyUSB0 | grep COPS:
busybox chat TIMEOUT 1 ECHO ON "" AT OK "AT+CFUN?\r\n" OK "" </dev/ttyUSB0 2>&1 1>/dev/ttyUSB0 | grep CFUN:
busybox chat TIMEOUT 1 ECHO ON "" AT OK "AT+CSQ?\r\n" OK "" </dev/ttyUSB0 2>&1 1>/dev/ttyUSB0 | grep CSQ:

有很多点都可以切入启动。我们原来一般时在/etc/inittab里加一行：
null::once:/bin/sh /etc/.launcher
这样就有一个开机一次性运行的入口    lxr06B5_test.x

chat是pppd所带一个辅助工具。 chat用来与GSM模组建立会话。
它的实现比较简单，它向串口发送AT命令，建立与GSM模组的会话，以便让PPP协议可以在串口上传输数据包。


执行ls /mc2017/dev -l是为了看相应的GPIO到底映射出来没有，如果没有要先去做的

/mc2017/etc/MC2017spec.sh里放的是我们机器（MC2017）启动时做的初始化

几个要点：
1）/sys/class/gpio/export，将端口号发过去，让sysfs用户空间可以操作
2）然后相应的端口号就会出现在/sys/class/gpio下，如PC15/
3)  其下会有direction, 写out可以配置成输出，然后value决定其值

0-31: PA0-31
32-63: PB0-31       PB25   57
64-95: PC0-31       PC14   78
96-127: PD0-31       28D

马上相应端口号会出现。想取消只要往unexport里写就好了
比如PD6是96+6=102. 把102写到export里，就会有PD6目录出现

确认都可以操作后，将其value入口建立符号连接到/mc2017/dev下，操作就方便了
可以起个好用的名字，比如led1_pwr一类的
ln -sf /sys/class/gpio/PA5/value /mc2017/dev/led1_pwr

sysfs是为了在用户空间操作核心空间而设计的

LED是用LED驱动做的，/sys/class/leds/下的led_?/brightness 开关控制

http-server安装:
下载好node.js
npminstall http-server -g
http-server -c-1

外部服务器
112.74.169.148
用户名:Adminstrator
密码:Uniriho2014888

120.79.19.49

06b5_electric.x
route del -net 192.168.8.0 netmask 255.255.255.0 gw 192.168.8.1
route del -host 192.168.8.1 dev eth0:0

route del default gw 192.168.8.1 

terminaldb.x slave_address
192.168.1.138
192.168.1.3

222.82.250.217

公司架一台http服务器,做个repository起来。
只要用http协议的URL能取到文件就行了。
Linux下的apache，Windows server 都行。

1) RS232只是串口而已，RS485和SAM卡也是变种的串口，关键是demo测试怎么完成。板子放在测架上时，我们可以靠串口间的对接完成测试，但装好了就只能和对端设备一起测试了。
2）TF卡是个标准设备，只要你插了卡，就会有相应的/dev/mmcblk1...
RS485只是协议不同的UART通讯；SAM得配一个动态库完成ISO7816-3的操作:ATR,PTS,TPDU。

http://read.pudn.com/downloads132/doc/comm/563504/ISO-IEC%207816/ISO%2BIEC%207816-3-2006.pdf
看一下ATR(answer to reset)和T=0传输部分（12.2 Command-response pair transmission by T=0 )
http://www.embedx.com/pdfs/ISO_STD_7816/info_isoiec7816-4%7Bed21.0%7Den.pdf
7 Commands for interchange 部分，重点select, get responce, get challenge等
250服务器/publc_folder/t7816.tar.gz有一个命令行交互的演示程序
能看懂并实现：ATR,T0TE,OFF这三个处理分支，演示就差不多够用了


看模块说明书；用minicom试验；用串口通信实现

看完线路图和说明书相关部分就知道怎么做了：
LoRa_cfg， LoRa_pwr，LoRa_rst全低时为关机状态
开机过程：LoRa_pwr 高；延迟；LoRa_rst高
完成配置后LoRa_cfg高，进入透明通讯状态


echo 1 > /mc2017/dev/LoRa_pwr   
sleep 2
echo 1 > /mc2017/dev/LoRa_rst
echo 1 > /mc2017/dev/LoRa_cfg

+++




busybox chat TIMEOUT 1 ECHO ON "" AT OK "AT+COPS?\r\n" OK "" <&99 2>&1 1>&99 | grep COPS:

 ./terminaldb.x set slave_address  20190708
 
 
========================================
               
https://pan.baidu.com/s/
ftp://192.168.6.2/


mkdir lxr06B5_test_state
touch info
touch TFcard_status
vi /etc/network/interfaces 
mkdir lora_test

echo 1 > /mc2017/dev/LoRa_pwr   
sleep 2
echo 1 > /mc2017/dev/LoRa_rst
echo 1 > /mc2017/dev/LoRa_cfg


tar zxvf 06b5_20190727.tar.gz
 
 23020003100024
 
 2302007A12640032000000310000003031300000000000000030313035383033000000000000000000000000000000000031003230313600000000787878000000000000000000000000000000000000000000797979000000000000000000000000000000000000000000000003E800E2806D92200053021F076CDC0024
 230200051101C80024
 2302290024
 23020003290024
 23020003170024
 
 23 0B 13 03 56 04 00 00 00 00 00 90 24
 
23 11 00 e3 
//UID+1
53 44 46 4b 31 38 30 30 30 30 31 31 31
//TID 
e2 00 68 0d 00 00 40 06 59 31 70 a1 
//卡号 0-7
aa 55 aa 55 00 00 00
//安全字信息 8-23 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
//留空 24
00
证件类型 //25 
00
//数据格式版本号 26
00 
//留空 27
00
//注销状态  28 
00
//留空 29 - 33
00 00 00 00 00
枪类型 //34-37              
00 00 00 00 
枪支类型 //38-47
00 32 00 00 00 00 00 00 00 00
生产厂号 //48-49
00 00 
生产日期 //50-57
00 32 00 00 00 00 00 00 
//留空 58-65
00 00 00 00 00 00 00 00  
所属部队 //66-89
00 84 c3 b6 10 be 29 e9 99 c1 2a b2 11 00 c1 26 47 c1 2a b2 11 00 c1 26 
库房信息 //90-113
47 b1 fd 39 b0 f3 83 42 0a c1 2a b2 11 00 c1 26 47 c1 2a b2 11 00 c1 26 
//领枪人 114-121
47 00 00 00 00 00 00 00 
//领枪时间 122-133
00 00 00 00 00 00 00 00 00 00 00 00
//上次射弹周期保养时间和弹数  134-147
00 00 00 00 00 00 00 00 00 00 00 00 00 00
枪号 //148-171
00 33 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
//原始射弹数1  172-175
00 00 00 00 
//出厂射弹数 176-179
0b 00 00 00 
原始射弹数2 //180-183
4d 00 00 00 
//采集初始射弹数 184-187
00 00 00 00 
58 00 00 00 00 00 00 00 00 00 00 00 00 
60 24


23 29 00 80 
53 44 46 4b 31 38 30 30 30 30 31 31 31 
e2 00 68 0d 00 00 40 06 59 31 70 a1 
00 
00 00 00 00 
32 00 00 00 00 00 00 00 00 00 
00 00 
32 00 00 00 00 00 00 00 
32 30 38 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
34 34 35 35 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
33 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 58 
58 
24




FE FE FE FE 68 11 11 11 11 11 11 68 11 04 33 33 34 33 18 16

68 11 11 11 11 11 11 68 11 04 33 33 34 33 18 16 
fe fe fe fe 68 11 11 11 11 11 11 68 91 08 33 33 34 33 64 33 33 33 99 16 ff 


scp 源 目标
比如
scp root@192.168.1.2:/var/log/message /public
scp /public/file root@192.168.1.2:/var/log/

scp root@192.168.1.9:/111.txt /     
scp /home/root/store_reader.x root@192.168.1.9:/



=======================================
docker:

	# 上传windows桌面文件 upload.txt 到容器myContos的 /usr/local 目录下
	cd ~/Desktop
	docker cp lxr06B5_testV1.4/lxr06B5_test.c sta:/lxr06B5/lxr06B5_test
	docker cp lxr06B5/lxr06B5_port/lxr06B5_test.c sta:/lxr06B5/lxr06B5_port	//06B5测试
	docker cp lxr6000_test/lxr6000_test.c sta:/lxr6000test/testlxr6000			//6000测试
	docker cp lxr6000/6000_testYZ/6000test_YZ.c sta:/lxr6000/6000test_YZ	
	docker cp lxr6000/army/store_version_20180425_12.7/wifi.c sta:/lxr6000/armylxr6000/rcv_server.x
	docker cp lxr06B5/lxr06B5_9009_485/lxr06B5_9009_485.c sta:/lxr06B5/lxr06B5_9009_485
	
	
	
	
	复制到本地
	docker cp sta:/lxr06B5/lxr06B5_test/lxr06B5_test.x /Users/uniriho/Desktop/06B5_test
	docker cp sta:/home/lxr06B5_test/trs232/trs232 /Users/uniriho/Desktop/06B5_test
	docker cp sta:/lxr6000/armylxr6000/store_reader.x /Users/uniriho/Desktop/6000_test
	docker cp sta:/lxr6000/6000test_YZ/6000test_YZ.x /Users/uniriho/Desktop/6000_test
	docker cp sta:/lxr06B5/lxr06B5_9009_485/lxr06B5_9009_485.x /Users/uniriho/Desktop/06B5_test
	

	
	
busybox chat TIMEOUT 1 ECHO ON "" AT OK "AT+COPS?\r\n" OK "" <&/dev/ttyUSB0 2>&1 1>&/dev/ttyUSB0 | grep COPS:
busybox chat TIMEOUT 1 ECHO ON "" AT OK "AT+CFUN?\r\n" OK "" <&99 2>&1 1>&99 | grep CFUN:
busybox chat TIMEOUT 1 ECHO ON "" AT OK "AT+CSQ?\r\n" OK "" <&99 2>&1 1>&99 | grep CSQ:



========================================
2020.2.23
1.确认B5测试程序,与许昌测试结果不符合,可能测试版本不相同,明日打包发送给许昌新程序.
2.6000测试移植的新程序,包含wifi测试以及0665基本功能测试.
将脚本放入相应文件夹后可正常实现6000功能.将mnt/a打包文件存放在桌面6000_test文件夹中

========================================
2020.2.24
1.6000连接wifi后可以通过scp传文件
//scp 源 目标
scp root@192.168.1.9:/111.txt /     
scp /home/root/store_reader.x root@192.168.1.9:/
2.0665军队版武警版均移植完毕,wifi功能可正常使用.
3.打包了06B5测试程序,可发给许昌测试

ifreq结构用来配置ip地址，激活接口，配置MTU等接口信息的,
ifreq包含在ifconf结构中。而 ifconf结构通常是用来保存所有接口的信息的。

========================================
2020.2.25
1.06B5发给许昌测试
2.9009开始增加事件记录的测试项.
初步思路为增加2个子界面,主界面通过按钮进入第一级子界面,包含内容为:
失压,欠压,过压,断压,失流,断流,过载,掉电,电压不平衡,电流不平衡,电压合格率.
每一项为一个按钮,再次点击后进入下一级子界面,二级子界面中的按钮发送数据标识,
一级子界面进行接收,接收后再把数据标识发送给主界面,主界面发送给电表进行查询.

实现过程为通过槽函数来实现数据的收发.实现一个二级界面的过程:
1)增加一个QT设计师界面类
2)在一级页面中添加二级页面的头文件  //#include "undervoltage.h"
3)在一级页面头文件中的public类中创建新的二级页面 //Undervoltage * undervoltage;
4)在一节页面的ui中为创建的二级页面分配空间  //Event_log::undervoltage = new Undervoltage;
5)在一级页面中生成对应的槽函数,点击后显示二级页面并隐藏一级页面  // undervoltage->show();  this->hide();
6)将触发信号添加进二级页面头文件  //signals:   void  sendeventData(QString,QString);
7)将二级页面的按钮生成槽函数,并发送信号 ,随后隐藏二级页面 //emit sendeventData("三相失压","68 11 11 11 11 11 11 68 11 04 33 33 34 36 1B 16");
8)在一级页面中将信号与槽相关联 // connect(undervoltage,SIGNAL(sendeventData(QString,QString)),this,SLOT(SendRecvData(QString,QString)));


========================================
2020.2.26
1.9009电表升级,升级前只有电压合格率和掉电次数有数据返回,升级后均可返回;
2.测试程序增加了每个项的测试页面;
3.失压事件记录返回的数据长度为105字节;
4.测试程序思路更正,将得到的字符串通过方法处理,如果需要小数点则在相应的位置加上.
QString SerialPortAssistant::getvalue(QStringList listdisplay,int num,int datalong,int spot)

========================================
2020.2.26
1.使用字符串处理函数将得到的时间记录返回数据进行处理,将想要显示的数据显示在TextEdit中;
2.思路更正,后续事件采用下拉框来提示用户,只使用一个按钮槽函数;
3.思路更正,新增方法拼接查询码,在按钮槽函数中通过下拉框列表得到标识码,将标识码做参数使用方法处理,
得到整串查询码.再将信号发出.
4.已经做完失压,欠压,过压,断相,失流,过流,断流.


========================================
2020.2.27
1.增加掉电,电压合格率测试;
2.电压合格率分为电压合格率统计数据与ABC三相电压合格率统计数据,采用两个列表与两个按钮实现功能
发现问题:电压合格率统计数据与ABC三相电压合格率统计数据组装的查询码返回的字节均为49,但是文档
中描述电压合格率统计数据中的电压合格率与电压超限率均为3个字节;
3.过载记录是没有组合无功;
4.程序中的电压合格率和超限率都是三字节。


上1次电压不平衡 68 11 11 11 11 11 11 68 11 04 34 33 3C 36 24 16		×
上1次电流不平衡 68 11 11 11 11 11 11 68 11 04 34 33 3D 36 25 16		×
本月A相电压合格率 68 11 11 11 11 11 11 68 11 04 33 34 43 36 2B 16   √
上1次掉电 68 11 11 11 11 11 11 68 11 04 34 33 44 36 2C 16 			√
上1次A相过载 68 11 11 11 11 11 11 68 11 04 34 34 42 36 2B 16		√

========================================
2020.3.2
1.9009电表更新错误码操作处理
2.修正零线电流,电网频率处理;
3.新增电压不平衡总次数,总累计时间.电流不平衡总次数,总累计时间查询;
组装10次电压不平衡记录以及10次电流不平衡记录查询,由于版本问题暂无返回数据;
4,新增掉电总次数查询.

========================================
2020.3.3
1.QT版本更新为5.13.2 可支持打包32位系统软件;
2.更新9009电表32位测试程序;
3.0665武警野战版做更新批处理以及测试报告单发给许昌;
4.06B5确认许昌测试问题;
5.发送208GUN管控程序测试方案给许昌用于测试.


========================================
2020.3.4
1.06B5测试程序4G测试将拨号失败与发送数据失败分开;
2.06B5测试程序老化测试五分钟循环一次;

========================================
2020.3.5
1.06B5测试程序老化测试处理完成,正在测试;
2.打包新06B5测试程序,更新了老化程序的测试,发往许昌进行老化测试;


date -s "2020-03-05 10:20:30"
hwclock -s 将系统时间同步至硬件
hwclock -w 将硬件时间同步至系统

========================================
2020.3.9
1.完成6000测试程序
2.优化6000测试程序连接wifi


========================================
2020.3.10
1.6000调试UHF模块
无法开机   之前两周调试都正常开机    询问暂时无法优化
将显示屏取下后上电可正常开机
23 0B 13 03 43 07 00 00 00 00 00 A0 24

将模块与电脑连接,断开模块与设备的连接,用示波器查看结果为可看到RX波形,无法查看TX波形,拉高拉低/sys/class/leds/uhfctrl/brightness有波形变化

测试模块:
(1)将模块VBat与Ven短接
(2)测试使能EN脚
(3)不接主机接主板

2.测试9009  电流  互感器  负载

========================================
2020.3.11
1.继续调试6000UHF模块,
(1)将VBat与Ven短接,接上主机,发送读命令
(2)示波器测试主机接的TX脚均有波形
(3)将6芯J3座与主机连接,收发数据正常.示波器量BC_VCCEN_PC14脚上下电均有正常回应
(4)

接上新的915模块发现收发均正常

2.测试0665移植到6000的程序
rcv_server可正常接收发送协议命令

========================================
2020.3.12
1.跟进军队版、库房版程序测试,无异常
2.继续测试0665移植到6000的程序,连接公司wifi可正常执行协议指令
3.LXR6000稳定性测试

"sh -c" 命令，它可以让 bash 将一个字串作为完整的命令来执行，
这样就可以将 sudo 的影响范围扩展到整条命令。具体用法如下：
$ sudo /bin/sh -c 'echo "hahah" >> test.asc'

========================================
2020.3.13
1.LXR6000稳定性测试

问题:
(1)wifi功能图标未显示在显示屏上
(2)将日期时间写入时钟系统功能函数无法正常使用 TERM_setRTCandSYStime()
(3)读取电压函数无法正常使用 getBatVoltage()

2.新的UHF模块，了解下通信协议，安排写个demo测试

========================================
2020.3.16
1.将10台新装的6000下好测试程序
2.6000测试程序wifi_search()优化,目前观察可稳定切换wifi
3.新型UHF测试

========================================
2020.3.17
LXR06B5与9009的485通信问题故障调试跟踪
1.写个demo，LXR06B5循环读取A相电压（60S一次）；
2.如果电表超时无返回数据，则记录下当前的时间，形成错误日志

93 8f bf 3a 3a 7e 3a 3a 7e 3a 3a 7e 3a 3a 7e 3a 3a 7e 3a 3a 7e 26 1e 7e 3a 3a 7e 3e 2e 7e 32 32 7e 32 2e 7e 32 2e 7e 32 2a 7e 3a f6 7e 3a 26 ff

========================================
2020.3.18
LXR06B5与9009的485通信问题故障调试跟踪
简单的测试程序已经完成,但在调试的时候使用B5通过485发送正确的查询码一直无法返回正确的数据,
在测试程序上看有一些杂乱的返回码,将电表断电任然有一样的返回,将06B5重启后立马使用测试程序,
并使用9009测试程序进行测试,一段时间内无法返回正确数值,返回的数值为之前出现的杂乱码.
通过485短接无法做出判断.06B5使用minicom暂时无法接受到正常数据.

配置波特率2400 8E1

1.怀疑字符串转16进制出现问题
转换AB口通过9009测试程序发现通过485口发送过来的查询码为正确的查询码
2.怀疑接线错误
9009接电脑  使用测试程序为正常
9009接06B5	无返回数据
9009接电脑并06B5	出现杂乱码
9009接06B5并电脑	出现杂乱码

========================================
2020.3.19
LXR06B5与9009的485通信问题故障调试跟踪

06B5使用minicom与电脑连接通过串口调试助手发现接收的数据不正常.
再次使用06B5测试程序测试485口.485口发送的数据在接收时为分段发送

确认后是AB接反,将LXR06B5与9009的485通信问题编写文档发送给黎工.

========================================
2020.3.20
LXR06B5与9009的485通信问题故障调试跟踪

设备连接示波器调试一天,有进展,需要进一步沟通

新型UHF测试开了个头

========================================
2020.3.23
新型UHF测试程序完成读EPC
"\xBB\x16\x00\x16\x0D\x0A"

读测试
    /*组读标签的协议包：以0xBB打头，0x0D 0x0A结尾*/
    send_buf[0] = 0xBB;
    send_buf[1] = 0x19;//Type协议指令
	send_buf[2] = 0x0E;//Len数据长度
    memcpy(send_buf + 3, "\x00\x00\x00\x00", 4);//AP密码
   	send_buf[7] = 0x00;//FMB滤数据类型,0x00 表示 EPC 过滤， 0x01 表示 TID过滤
	memcpy(send_buf + 8, "\x00\x02", 2);//FL 过滤数据长度，单位为字节， 若不过滤，则必须置零，且 MD 字段无数据
	memcpy(send_buf + 10, "\xE2\x00",2);//MD 为过滤数据
	send_buf[12] = 0x03;//MB 为用户需要查询的数据的 bank 号 
	send_buf[13] = 0x00;
    send_buf[14] = addstr;//SA 为需查询的数据的起始地址，单位为字
    send_buf[15] = 0x00;
    send_buf[16] = wordcount;//DL 为需查询的数据长度，单位为字
    send_buf[17] = Cc_Check(send_buf + 1, 16);
    send_buf[18] = 0x0D;
    send_buf[19] = 0x0A;

========================================
2020.3.24
新型UHF测试程序
写测试
	/*写标签协议包组包，以0xBB为包头，0x0D 0x0A为包尾*/
	send_buf[0] = 0xBB;
	send_buf[1] = 0x1A;//Type协议指令
	send_buf[2] = 0x0E + wordcount * 2;//Len数据长度
	memcpy(send_buf + 3, "\x00\x00\x00\x00", 4);//AP密码
	send_buf[7] = 0x00;//FMB滤数据类型,0x00 表示 EPC 过滤， 0x01 表示 TID过滤
	memcpy(send_buf + 8, "\x00\x02", 2);//FL 过滤数据长度，单位为字节， 若不过滤，则必须置零，且 MD 字段无数据
	memcpy(send_buf + 10, "\xE2\x00",2);//MD 为过滤数据
	send_buf[12] = 0x03;//MB 为用户需要查询的数据的 bank 号 
	send_buf[13] = 0x00;
    send_buf[14] = addstr;//SA 为需查询的数据的起始地址，单位为字
    send_buf[15] = 0x00;
    send_buf[16] = wordcount;//DL 为需写入的数据长度
	memcpy(buf + 17, write_data, wordcount * 2);//Data 为写入的数据，高位在前
	send_buf[17 + wordcount * 2] = Cc_Check(send_buf + 1, 16+wordcount * 2);
	send_buf[18 + wordcount * 2] = 0x0D;
    send_buf[19 + wordcount * 2] = 0x0A;
	
标签初始化
	write_tag_(0 + i * 5, 5, "\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0");
	
错误判断
	data_read[1] == 0xff
	0001—校验码错误
	0002—下发指令错误
	0003—Type 字节错误(不支持的指令)。如果模块支持指令，则为反射过大。
	0005—未读到标签数据

编写F90A1-L_UHF模块测试报告开头

协助调试9009与06B5 485通信问题

========================================
2020.3.25
F90A1-L_UHF模块测试报告编写
测试程序使用文件写入提取读取时间
再使用老的模块读取用作对比

========================================
2020.3.26
F90A1-L_UHF模块测试报告编写
记录F90A1-L_UHF模块读10cm 20cm 30cm 1m,写10cm 20cm的数据
记录UHF915模块读10cm 20cm 30cm 写 10cm的数据
使用lxr6000接上新的UHF915模块再次做记录,数据和0665相似
总结:F90A1-L_UHF模块读写时间短一些,但是距离长两个模块都不太能正常响应

整理之前调试的代码至服务器

========================================
2020.3.27
1.根据回复修改F90A1-L_UHF模块测试报告;
2.9009与485通信问题找到原因,没有加上校验位使能;
	//2400 8E1 PARENB配置校验位使能
    newtio.c_cflag = B2400 | CS8 | CLOCAL | CREAD | PARENB;
	newtio.c_cflag &= ~PARODD;//even
	newtio.c_cflag &= ~CSTOPB; 
3.0665使用新的5163E模块测试模块下电重新上电耗时;

模块1 8.5s 9.8s 9.7s 8.7s 10.14s 9.7s 9.99s
模块2 9.8s 9.5s 10.4s 9.7s 9.4s 9.3s 9.7s

模块1 9.9s  10.1s  9.13s  10.31s  9.98s  9.05s
模块2 9.03s  8.73s  9.6s  8.42s  9.96s  9.67s

4.6000装上F90A1-L_UHF模块进行测试,读写效果和之前测试差不多,
任然需要找对位置才能快速的读写,否则有数据回应需要很久;
5.修改06B5与9009循环读取A相电压测试程序,达到需要的效果;
//查询命令60s发送一次,如果60s无法接受到信息并返回则判断为超时,将时间写入日志文件
6.视觉辅助阅读系统柜(相关资料蒋工提供);
7.验证9009事件.

========================================
2020.3.30
1.F90A1-L_UHF模块使用标准模块进行测试;

读
10cm  0.40 0.40 0.40 0.45 0.40 0.40 0.41 0.40 0.41 0.77 0.42 0.40 0.43 0.41 0.45
40cm  0.41 0.40 0.40 0.44 0.40 0.40 0.41 0.52 0.54 0.45 0.48 0.44 0.50 0.46 0.51 
80cm  0.54 0.51 0.50 0.48 0.52 1.10 0.52 0.73 0.81 0.72 0.40 0.48 0.40 0.40 0.41 
120cm 13 11 12 17 11 13 12 7 11 11 11 11 11 11 13

写
10cm 1.3 1.8 1.8 1.8 1.6 1.8 1.5 1.3 1.4 2.1 3.3 2.5 1.6 2.3 1.5
30cm 2.1 3.7 2.9 2.3 3.9 4.1 5.7 5.6 5.9 6.1 3.5 2.1 5.4 2.3 4.6
50cm 8 9 8 13 4 4 5 .. 8 19 4 11 14 12 ..

2.06B5确认许昌时间测试问题,发现断电时间过长时间会重置;
3.9009事件记录确认,对应的操作无对应的事件生成,编写事件故障试验文档;
4.6000UHF测试程序更新,增加10字节读写测试;
5.0665也对应修改程序,增加10字节对应测试,
  5163E模块与F90A1-L_UHF模块分别对标准标签进行读写并对比,
  读距离10 20 40 60 80 100 120 写距离 10 20 30 40 50,预计3.31完成; 
  
========================================
2020.3.31
1.icon_km 应用于0665的后台程序,查找源码未查找到,需要黄总进行操作;
2.电池电压协助测量,发现在电压低于3.6V仍能使用(电源芯片可以处理这种情况),直至低于3.2v都可以使用.
后续需要继续调试;
3.06B5确认老化问题;
4.F90A1-L_UHF模块与5163E模块十字节读写对比完成F90A1-L_UHF模块测试.

========================================
2020.4.1
1.06B5循环读取9009A相电压程序正确的获取超时数据;
2.F90A1-L_UHF模块与5163E模块十字节读写对比完成5163E模块测试;
3.视觉辅助阅读系统文档编写;
4.验证LXR9009新版程序关于失压、过压、断相、电压不平衡、电流不平衡、失流、过流、断流、过载、电压合格率等时间记录;

68 11 11 11 11 11 11 68 11 04 34 34 35 36 1e 16 失压
68 11 11 11 11 11 11 68 11 04 34 34 36 36 1f 16 过压

========================================
2020.4.2
1.6000调试
cat /sys/class/power_supply/act8945a-charger/uevent

//192.168.1.250/public_folder/at91-sama5d2_xplained.dtb
传到手持机上，拷贝到/boot 下覆盖同名文件
只用电池替换前:power_supply_capcaity_level:critical   替换后:Normal

/sys/class/power_supply/act8945a-charger/uevent是充电器状态

/sys/class/power_supply/act8945a-charger/status也可以

可以是：Charging/Discharging/Full

放电中/ 充电中/ 已充满

在未充电时，可以从
/sys/bus/iio/devices/iio\:device0/in_voltage6_raw
读到电池电压，但是需要换算。

/sys/class/power_supply/act8945a-charger/status读出内容的几种可能性

详细可以仔细看下linux相关文档。

电池电压不需要很准，只要测好相应的门限值就好了，比方第一格代表3.6v, 对应读数1910这种。到时需要用电压源多测几台决定

/proc/net/wireless中wlan0那行的link值代表信号优劣，70为满格。就是你从iwconfig里读到的47/70的那个47和70的含义。

回头具体各格对应的电压读数需要多几台测试一下决定具体使用什么数据

同样的，得测一下最低什么样的link quality还可以接受，比如25，然后把它定为信号最低格的标准

硬件rtc可以用hwclock查到

//192.168.1.250/public_folder/rtc_demo.c

可以考虑将相应/sys/下的一些sysfs文件建一些符号链接出来，好操作一些。

/sys/bus/iio/devices/iio\:device0下：
in_voltage_scale是比例尺scale
in_voltage6_raw是读数reading
实际电池电压是：
vol = reading * scale * (590+442) / 442
可能可以到5%左右精确度
单位是毫伏mV

590k和442k电阻是1%精度的；A/D转换精度应该可以1/1024；A/D参考精度也不会太高。最主要的是你试试就知道了，每次读数都不一样，示波器可以看到电池电压波动。

========================================
2020.4.3
1.6000电池电压读取api
*mv = reading * scale * (590+442) / 442;
2.9009事件确认,无回应;
3.提交视觉辅助阅读系统文档;
4.6000时间设置api开头

========================================
2020.4.7
1.6000时间设置api

========================================
2020.4.8
1.修改6000测试程序;
2.确认06B5老化测试;
3.参加3008会议.

========================================
2020.4.9
1.修改6000测试程序;
	正确设置系统时间,正确读取当前电池电压.
	date "+%Y-%m-%d %H:%M:%S" 
2.确认06B5老化测试;
	1天的测试4G连接正常,偶尔拨号失败
	时间长了之后开始连接服务器发送数据失败
	再长一些时间拨号始终失败
3.确认许昌0665电池电压读取问题.

========================================
2020.4.10
1.确认06B5老化测试结果并记录,反馈给黄总;
2.确认icon_km后台程序;
3.许昌0665武警野战版将蜂鸣器开启做新批处理文件.

========================================
2020.4.11
1.0665写EPC功能

========================================
2020.4.13
1.完成0665写EPC功能
	从文件列表中获取EPC
	按键写入按键读取循环10次
	超时后写入下一个EPC

========================================
2020.4.14
1.向黄总反馈06B54G拨号;
2.和许昌沟通06B5老化测试;
3.和黄总反馈6000icon_km后台程序.

========================================
2020.4.15
1.06B54G拨号进行修改,在脚本里大量加调试输出到临时文件
	sh -x .sh &> log
busybox chat TIMEOUT 1 ECHO ON "" AT OK "AT^NDISDUP1,1,\r\n" OK "" <&/dev/ttyUSB0 2>&1 1>&/dev/ttyUSB0 | grep OK
上电后第一次拨号始终会卡死,之后不会,无法成功拨号,不用busybox可以立马成功拨号

	修改多次后未解决问题,先复现4G拨号一天后始终拨号不成功的问题.将拨号脚本的日志一通写入文件.

2.确认208提出的问题
	统计期间射弹数无双区间;
	生产版写入射弹数逻辑;
	
========================================
2020.4.16	
1.继续进行06B54G老化测试;	

========================================
2020.4.17
1.208反馈0665问题
	(1)部队野战版
	期间射弹数需要增加双区间;
	预置信息内容做修改信息没有清空;
		已解决,增加tempbuf1,原代码逻辑为清空buf1,则在按上下键时不会对枪型做清空导致屏幕显示出错
	增加增加tempbuf1用于保存buf1内容,如过不修改按上下键则使用tempbuf1
	(2)武警野战版
	读取生产批次内容赘余;
		已解决,批次数组空间定义为8字节,在使用内容达到8字节时会出错,改为定义20字节.
2.继续进行06B54G老化测试.

========================================
2020.4.20
1.继续进行06B54G老化测试;
2.更新0665两版代码.

========================================
2020.4.21
1.继续进行06B54G老化测试;
2.协助测试7000上F90A1-L_UHF模块.

========================================
2020.4.22
1.继续进行06B54G老化测试;
2.继续协助测试7000上F90A1-L_UHF模块.

========================================
2020.4.23
1.继续进行06B54G老化测试;
2.许昌06B5测试程序更新,开始重新测试;
3.和黄总沟通06B5以及6000,预计明天开始做6000后台程序的移植;
4.部队野战版枪型信息批处理更改,删除0305801,0305802改为新型5.8mm班用机枪.
	208有一台0665单数据线供电无法开机,田工回复如果是一直无法供电的话，应该是主板的USB口或数据线有问题，
	如果是可以给电池充电，但是无法开机的话，有可能是主板的电容放电了，带电一会应该就可以开机了。
========================================
2020.4.24
1.icom_km初版已经编译完成,可显示状态栏图标等;
	黄总说后续再慢慢修改电池/充电/休眠等部分;
	
	/sys/class/power_supply/act8945a-charger/status
	可以读出充电状态：
	Discharging - 没接充电器
	Charging - 正在充电
	Full - 已充满
	
	getADC1是用来读充电电流的，用来判断是否在充电。找到调用它的代码，
	替换成从/sys/class/power_supply/act8945a-charger/status里读到状态,
	动画部分应该已经在代码里了.
	
	wifi建议使用link quality而不是signal level来做图标,原来程序是按信噪比做的（signal_level - noise_level), 
	新的模块驱动好像噪声信号判断不是很对.现在试试看link quality. 主要需要测一下link quality下降到多少时无法正常通讯，作为最低一格
	
	测试发现信号强度区间为30-52
	
	/mnt/a/mc2006文件夹改名为mc2017
	
========================================
2020.4.26
1.继续进行06B54G老化测试;
2.测试相应情况下的信号强度和噪声强度;
3.更新6000测试程序以及6000后台程序.

========================================
2020.4.27
1.记录测试6000信号强度与噪声强度;
2.使用多台6000测数据离散性;
3.商量6000wifi图标分格并更改
	定为大于42为满格(发送数据始终成功),
	大于38位三格(发送数据可能会有延时),
	大于33位二格(发送数据需要延时才能成功),
	其余为一格(数据发送失败).
	
========================================
2020.4.28
1.6000休眠测试
	休眠命令 echo mem > /sys/power/state
	发现问题:
	1.通过按键事件来判断是否读到电源键是电源键弹起,电源键按下是唤醒休眠,我看Myinputevent结构体中没有对按键按下弹起的事件记录,我目前就只想到通过标志位来判断我是否只是需要唤醒休眠,不然在一个循环中就会唤醒立马又会休眠.
	2.通过echo mem > /sys/power/state方式休眠液晶屏我还不清楚如何才能关闭,左上角牛眼也没有闪烁
	
	lsmod
	uname -a
	更新myks0724.ko驱动,放到/mc2017/drivers下,液晶屏正常关闭,牛眼闪烁
	
	继续修改程序,暂时使用标志位方式处理按键按下与弹起问题.
2.休眠程序添加入6000后台程序中
	deep_sleep_call_script()为调用户的维护程序
	休眠部分添加在老的ioctl(fdapm, APM_IOC_SUSPEND, NULL)机制下方.

休眠部分需要更新myks0724.ko驱动.
3.继续进行06B54G老化测试.
	服务器连接出现问题,提取日志文件,重新进行新一轮测试.

========================================
2020.4.29
1.继续进行06B54G老化测试;
2.6000休眠部分增加原先有的逻辑;
	if(deep_sleep_flag == 0)	        //deep sleep
	{
		backlight_power(0); 
		deep_sleep_flag = 1;
		system("echo mem > /sys/power/state");
		backlight_power(1);
		ELtimer = 1;
		keypressed = 1;
	}
	else
		deep_sleep_flag = 0;
	目前后台程序与测试程序结合测试功能正常.(电池/充电/休眠/时间/背光/牛眼)
	wifi远离后图标消失,回到wifi覆盖区域图标正常显示.
3.将更新后的6000后台程序发给黄总进行进一步修改;
4.继续进行06B5老化测试,目前进度反馈给了黄总;
5.员工月度绩效考核表;
6.准备编写socket服务器工具.

========================================
2020.4.30
1.完成员工月度绩效考核表;
2.继续进行06B54G老化测试,拿到许昌测试日志;
	1号06B54G拨号多次失败,其他三台06B5均正常,
	连接服务器失败为当时服务器关闭,节后继续进行测试.
3.和蒋工一起与条码头经理沟通.
4.了解并寻找市面上的传感器(水浸、烟感、消防等),主要为淘宝搜索.

========================================
2020.5.6
1.继续进行06B54G老化测试;
2.协同处理3008流程图;
3.6000浅休眠处理.
	/tmp/disable_suspend_pid里有正在执行进程的PID就会阻止深睡
	
	哪个进程想不让机器深睡就把自己的pid放进去。比如你的进程号是135，就在里面建一个空文件，名为135；
	退出时删掉它（不删也没问题，休眠时会判断当前运行的进程号里有没有放在这个目录下的）
	
	另一个目录是让那些不想让机器关屏幕的进程用的
	
	浅睡眠按键音更新驱动文件
	/sys/devices/platform/uhf-buzzer/muted
	将源程序中的对应路径做修改后按键音已取消
	
	获取进程pid号 ps aux | grep "6000test" |grep -v grep| cut -c 9-15

最后还有一个进程间通讯的测试（用来设定后台进程的参数，以及不通过按键唤醒浅睡）.

========================================
2020.5.7
1.lora模块调试
2.6000后台程序进程间通讯测试
	消息队列
	三种信息：
	1：自动关背光时间
	2：自动休眠时间
	3：唤醒浅睡眠
	改一个测试程序出来。用命令行参数指定发什么消息，以及消息内容。
3.socket通信服务器模拟软件
申请报文
开始标识:0x5B
唯一标识:0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
		 0x00 0x00 0x00 0x49 0x4d 0x45 0x49
协议序号:0xA0
数据长度:0x00 0x69
指定终端ID:0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
信号强度:0x00 0x00
运营商号:0x30 0x31
基站号  :0x00 0x00 0x00 0x00 
小区号  :0x00 0x00 0x00 0x00 
经度    :0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
		 0x00 0x00
维度    :0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
		 0x00
定位时间:0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
		 0x00 0x00 0x00 0x00 0x00 0x00 (yyyyMMddHHmmss)
电量    :0x00 0x00	 
防拆状态:0x00
振动状态:0x00
自动激活开关状态:0x00
充电状态:0x00
定位状态:0x00
通信状态:0x00
工作周期:0x00 0x00
心跳周期:0x00 0x00
静止通信周期:0x00 0x00
手机号码:0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
		 0x00 0x00 0x00
设备编号:0x00 0x00 0x00 0x00 0x00 0x00
CRC8	:0x00
结束标识:0x5D

0x5B 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x49 0x4d 0x45 0x49 
0xA0 0x00 0x69 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x30 0x31 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x5D



响应报文
开始标识:0x5B
唯一标识:0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
		 0x00 0x00 0x00 0x49 0x4d 0x45 0x49
协议序号:0xA1
数据长度:0x00 0x3B
指定终端ID:0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
自动激活开关:0x00
定位状态:0x00
通信状态:0x00
工作周期:0x00 0x00
心跳周期:0x00 0x00
静止通信周期:0x00 0x00
服务器地址长度:0X00
服务器地址:0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
		   0x00 0x00 0x00 0x00 0x00 0x00 0x00(000.000.000.000)
端口	:0x00 0x00 0x00 0x00
应答结果:0x00
CRC8	:0x00
结束标识:0x5D

0x5B 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x49 0x4d 0x45 0x49 
0xA1 0x00 0x3B 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0X00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
0x00 0x00 0x5D

========================================
2020.5.8
1.修改进程间通讯测试程序,通过传参方式控制后台进程.
	1)自动关背光时间
	2)自动休眠时间
	3)唤醒浅睡眠
	
2.lora模块调试
	
3.socket通信服务器模拟软件

6669服务器测试码:
	abcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxy9000
	
申请报文
开始标识:5B
唯一标识:00 00 00 00 00 00 00 00 
		 00 00 00 49 4d 45 49
协议序号:A0
数据长度:00 78
指定终端ID:00 00 00 00 00 00 00 00 
信号强度:00 00
运营商号:30 31
基站号1 :00 00 00 00 
小区号1 :00 00 00 00 
基站号2 :00 00 00 00 
小区号2 :00 00 00 00 
基站号3 :00 00 00 00 
小区号3 :00 00 00 00 
经度    :00 00 00 00 00 00 00 00 
		 00 00
维度    :00 00 00 00 00 00 00 00 
		 00
定位时间:00 00 00 00 00 00 00 00 
		 00 00 00 00 00 00 (yyyyMMddHHmmss)
电量    :00 	 
防拆状态:00
振动状态:00
自动激活开关状态:00
充电状态:00
定位状态:00
通信状态:00
工作周期:00 00
心跳周期:00 00
静止通信周期:00 00
手机号码:00 00 00 00 00 00 00 00
		 00 00 00
设备编号:00 00 00 00 00 00
CRC8	:00
结束标识:5D

5B 00 00 00 00 00 00 00 00 00 00 00 49 4d 45 49 A0 00 69 00 00 00 00 00 00 00 00 00 00 30 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 5D

响应报文
开始标识:5B
唯一标识:00 00 00 00 00 00 00 00 
		 00 00 00 49 4d 45 49
协议序号:A1
数据长度:00 3B
指定终端ID:00 00 00 00 00 00 00 00 
自动激活开关:00
定位状态:00
通信状态:00
工作周期:00 00
心跳周期:00 00
静止通信周期:00 00
服务器地址长度:00
服务器地址:00 00 00 00 00 00 00 00
		   00 00 00 00 00 00 00(000.000.000.000) 
端口	:00 00 00 00
应答结果:00
CRC8	:00
结束标识:5D

5B 00 00 00 00 00 00 00 00 00 00 00 49 4d 45 49 A1 00 3B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 2e 5D

/*将字符串转换,十六进制转换为十进制,如果为0则补一位0*/
QString Qstringtransform(QString text)
{
    text = QString::number((text.toInt(nullptr,16) - 0x33),16);
    text = QString("%1").arg(text.toInt(), 2, 10, QLatin1Char('0'));
    return text;
}

/*将十六进制转换为字符*/
char ConvertHexChar(char ch)
{
    if((ch >= '0') && (ch <= '9'))
        return ch-0x30;
    else if((ch >= 'A') && (ch <= 'F'))
        return ch-'A'+10;
    else if((ch >= 'a') && (ch <= 'f'))
        return ch-'a'+10;
    else return ch-ch;//不在0-f范围内的会发送成0
}

/*将字符串转换为hex格式*/
void StringToHex(QString str, QByteArray &senddata)
{
    int hexdata,lowhexdata;
    int hexdatalen = 0;
    int len = str.length();
    senddata.resize(len/2);
    char lstr,hstr;

    for(int i=0; i<len; )
    {
        //char lstr,
        hstr=str[i].toLatin1();
        if(hstr == ' ')
        {
            i++;
            continue;
        }
        i++;
        if(i >= len)
            break;
        lstr = str[i].toLatin1();
        hexdata = ConvertHexChar(hstr);
        lowhexdata = ConvertHexChar(lstr);
        if((hexdata == 16) || (lowhexdata == 16))
            break;
        else
            hexdata = hexdata*16+lowhexdata;
        i++;
        senddata[hexdatalen] = (char)hexdata;
        hexdatalen++;
    }
    senddata.resize(hexdatalen);
}

========================================
2020.5.9
1.socket通信服务器模拟软件
	1)QString转为char*
	  char* ch;
	  QByteArray ba = tempStr.toLatin1();
      ch=ba.data();
	2)增加包头包尾协议号位置与内容判断
	3)将服务器返回数据拆分处理
	4)CRC8校验
	#define FACTOR (0x107 & 0xFF) //多项式因子(取低8bit)
	unsigned char calcCRC(char *pdat, int len)
	{
		unsigned char j;
		unsigned char crc = 0x00;
		while(len--)
		{
			crc ^= (*pdat++);//前一字节计算CRC后的结果异或上后一字节，再次计算CRC
			for (j=8; j>0; j--)
			{
				if (crc & 0x80)//高位为1，需要异或；否则，不需要
				{
					crc = (crc << 1) ^ FACTOR;
				}
				else
				{
					crc = (crc << 1);
				}
			}
		}

		return crc;
	}
申请报文:
5B 00 00 00 00 00 00 00 00 00 00 00 49 4d 45 49 A0 00 78 00 00 00 00 00 00 00 00 00 00 30 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 11 5D
响应报文:
5B 00 00 00 00 00 00 00 00 00 00 00 49 4d 45 49 A1 00 3B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 2e 5D

	
2.lora模块调试
AT+FREQ=1,8,471900000

========================================
2020.5.11
1.socket通信服务器模拟软件
协议增加小区号1小区号2基站号1基站号2


5B0000000000000000000000494d4549A1003B00000000000000000000000000000000000000000000000000000000000000000000000000002e
00000000000000000000000000000000000000000000000000000000000000000000000000002e


unsigned char str1[1024] = "1231231230000000";
char *str2= (char *)str1;
QString sss = QString(QLatin1String(str2));
sendInput->insertPlainText("\n");
sendInput->insertPlainText(sss);

Encryption_3EDS(str1,test_key,1,16);
str2= (char *)str1;
sss = QString(QLatin1String(str2));
sendInput->insertPlainText("\n");
sendInput->insertPlainText(sss);

Encryption_3EDS(str1,test_key,0,16);
str2= (char *)str1;
sss = QString(QLatin1String(str2));
sendInput->insertPlainText("\n");
sendInput->insertPlainText(sss);




00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 2e


unsigned char des[300];

QString temp3des = message;
temp3des.remove(0,57);
QByteArray ba2 = temp3des.toLatin1();
memcpy(des,ba2.data(),300);

char *str2= (char *)des;
QString sss = QString(QLatin1String(str2));
sendInput->insertPlainText("\n");
sendInput->insertPlainText(sss);


Encryption_3EDS(des,test_key,1,120);
str2= (char *)des;
sss = QString(QLatin1String(str2));
sendInput->insertPlainText("\n");
sendInput->insertPlainText(sss);

Encryption_3EDS(des,test_key,0,120);
str2= (char *)des;
sss = QString(QLatin1String(str2));
sendInput->insertPlainText("\n");
sendInput->insertPlainText(sss);


========================================
2020.5.12



申请报文:

5b 34 36 30 30 34 32 35 30 30 34 30 31 30 34 37 a0 00 78 00 00 f4 3b ce 39 4a fa 32 38 30 30 0e 00 00 00 5a 11 00 00 25 00 00 00 7b 0f 00 00 35 00 00 00 5b 0f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 63 30 30 31 30 31 31 00 3c 1c 20 01 2c 00 00 00 00 00 00 00 00 00 00 00 30 30 30 30 30 31 0c 5d
//5B 34 36 30 30 34 32 35 30 30 34 30 31 30 34 37 A0 00 78 00 00 F4 3B CE 39 4A FA 32 38 30 30 0E 00 00 00 5A 11 00 00 35 00 00 00 5B 0F 00 00 2C 00 00 00 75 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 63 30 30 31 30 31 31 30 30 31 43 30 31 00 00 00 00 00 00 00 00 00 00 00 30 30 30 30 30 31 4A 5D 

5b 34 36 30 30 34 32 35 30 30 34 30 31 30 34 37 a0 00 78 00 00 f4 3b ce 39 4a fa 32 36 30 30 0e 00 00 00 5a 11 00 00 25 00 00 00 7b 0f 00 00 35 00 00 00 5b 0f 00 00 31 32 33 2e 36 38 39 33 34 36 39 37 2e 35 37 39 32 30 31 32 30 30 30 30 31 30 31 30 33 30 46 30 38 63 30 30 00 30 31 01 02 01 03 01 00 0f 00 00 00 00 00 00 00 00 00 00 00 30 30 30 30 30 31 6f 5d


5b343630303432353030343031303437a000780000f43bce394afa323630300e0000005a110000250000007b0f0000350000005b0f00003132332e36383933343639372e35373932303132303030303130313033304630386330300030310102010301000f00000000000000000000003030303030316f5d



响应报文:
5B343630303432353030343031303437A1003B00000000000000000000000101010201030F3132372E3030302E3030302E3030313636363600E15D

5B
343630303432353030343031303437
A1
003B
0000000000000000
00
00
00
0101
0102
0103
0F
3132372E3030302E3030302E303031
36363636
00
2e
5D


不需要空格
CRC8
3des
是否有web端
地址映射


========================================
2020.5.13
三火软件调试


========================================
2020.5.14
1.3008调试

========================================
2020.5.15
1.3008联调(三火 丹灵)

CRC8校验
uint8_t crc8_maxim(uint8_t *data, uint_len length)
{
    uint8_t i;
    uint8_t crc = 0;         // Initial value
    while(length--)
    {
        crc ^= *data++;        // crc ^= *data; data++;
        for (i = 0; i < 8; i++)
        {
            if (crc & 1)
                crc = (crc >> 1) ^ 0x8C;        // 0x8C = reverse 0x31
            else
                crc >>= 1;
        }
    }
    return crc;
}

========================================
2020.5.16
1.三火,丹灵软件联调,同时进行本地测试.


========================================
2020.5.18
1.3008本地测试
	长连接需要改为短连接

========================================
2020.5.19
1.三火调试3008板 深圳2块板都无法烧录
	确认为烧录线有问题    有虚焊情况    测量各个电路都通了后设备正常
	程序更新为V110
	
========================================
2020.5.20
1.调试3008板
	本地,丹灵联调  修改为短连接  下楼到空旷地方测试   均有定位信息
	发现定位时间问题
	
========================================
2020.5.21
1.调试3008板
	本地,丹灵4块板联调,修改定位时间问题   更新V130版本
	均有定位信息	取到了多份log   正常流程1分钟定位1条 2分钟上传  5分钟开始休眠 均正常
	休眠状态3分钟唤醒一次进行定位  正常

========================================
2020.5.21
1.调试3008板

2.修改3008本地服务器,将定位信息定位时间存入文件中.


========================================
2020.5.22
1.确认208问题 
	武警野战版处理的协议指令只有维护信息升级和上传版本信息两条,其余指令被注释.
	军队野战生产版 生产厂厂号写入地址为58-59   改为文档中的定义48-49   更新版本发给208
	武警网络版初始化指令后  读取射弹数会异常
	
2.3008socket本地服务器更新,增加log文件写入,使用imei号命名txt文件,将
经度,纬度,定位时间写入该文件.

3.办公室与室外本地测试,数据正常,接着进行室外正式服务器测试.


========================================
2020.5.23
1.修改3008本地服务器程序.处理时间增加8小时

5B343630303431393133393139343130A000780000C64D9FAA2F31323230303030334531333933303030443132414630303339313239423131332E39383832343332322E3539313936333230323030353233 3137 3030353663303031303131007800B4012C0000000000000000000000303030303036AE5D
	
	
========================================
2020.5.25
1.0665武警版初始化指令后读取射弹数异常

初始版本指令:2302007A12640032000000310000003031300000000000000030313035383033000000000000000000000000000000000031003230313600000000787878000000000000000000000000000000000000000000797979000000000000000000000000000000000000000000000003E800E200680D000040065932D4A10024

2302007A12640030000000310000003031300000000000000030313035383033000000000000000000000000000000000031003230313600000000787878000000000000000000000000000000000000000000797979000000000000000000000000000000000000000000000003E800E200680D000040065932D4A10024


23	//#
02	//指令号
007A	//长度
12	//二级指令
64	//写入数据长度


0030	//证件类型
0000	//注销状态
00310000	
003031300000000000000030313035383033000000000000000000000000000000000031003230313600000000787878000000000000000000000000000000000000000000797979000000000000000000000000000000000000000000


000003E8	//射弹数.大端
00	//类型(新老枪支)
E200680D000040065932D4A1	//TID
00	//校验
24	//$

2.0665更新新版本0665野战版更新20200522_部队;

========================================
2020.5.26
1.F90A1-S模块测试通信协议;
	模块两种协议兼容
	测试程序增加进入高速扫描状态协议
			增加退出高速扫描状态协议
			增加读取软件版本协议
	
	协议文档中读命令与老模块正常返回不符
2.3008丹灵测试;
3.确认武警网络版初始化指令后,读取射弹数会异常问题.

========================================
2020.5.27
1.3008丹灵测试;
2.F90A1-S模块测试通信协议;
	测试程序增加配置频段协议
			增加查询频段协议
			增加配置功率协议
			增加查询功率协议
	测试模块其他性能;
3.顺舟lora模块调试.
	ASR6501 470频段   SZ15-470-STD
	
========================================
2020.5.28
1.对3008两个模块进行升级
	硬件准备工作如下：
	1.USB转TTL工具，接上MC20E的 33脚 34脚以及GND脚（模块的主串口）
	2.板子上R41  R44  R47 R48断开
	3.MC20E模组的23脚与25脚短接，24脚与26脚短接
	
	需要模块的22脚和24脚短接，23脚和25脚短接，
	然后主串口rx tx 对应R48  R47的打箭头焊盘，接上USB的tx  rx，
	最后需要接GND，连接好之后点击start，最后上电
	
	软件操作，打开QFlash，打开相应的串口，添加升级包（cfg文件），
	点击start，然后上电，等待升级完成，显示pass
	
2.3008丹灵测试,一台放楼下一台放办公室,监测数据观察丹灵服务器是否有问题;	
	
3.6000进行功能测试
UHF测试增加UHF串口读写器协议内容
发现老模块功能无法全部使用

#/home/root/lxr6000_sleep.x
/home/root/icon_km 1 3700 3800 3950 4050 70 100 2002LCD &
/home/root/6000test_YZ.x &

4.进行顺舟lora模块调试
	使用LORA点对点配置指令进行调试
	配置PANID一直失败无法执行后续步骤


========================================
2020.5.29
1.完成员工月度绩效考核表;
2.3008本地测试;
	步行2小时,根据记录丹灵画出轨迹,确认是否正常
3.更新武警网络版版本号发出.

========================================
2020.6.1
1.新卡号:460041914214406
2.调试3008板
3.6000进行功能测试
4.将两块寄回的3008升级,带回两块3008

========================================
2020.6.2
1.一个寄回的3008无法正常启动;
	就用镊子把模块的第5脚和模块的外壳短接下，持续1秒钟以上，看灯会不会闪
	焊好线后板子一直可以正常启动,可能是虚焊
2.3008电池无法正常充电,后修正;
3.3008经纬度测试,填写LXR3008研发测试项定位经度项;
4.重新发送0665网络版_武警_20190923.

========================================
2020.6.3
1.测试两块升级后的F90A1-S模块;
	rewind（）的作用相当于fseek（文件指针，0,0），简单来说，
	就是使文件内的指向字节的指针回到开头，重新指向第一个字节.
	
	fsync()系统调用fsync将所有已写入文件描述符fd的数据真正的写道磁盘或者其他下层设备上。

	fileno()函数功能:把文件流指针转换成文件描述符
2.3008升级版本,测试对应功能,组装寄出;

06B5test密码:26745300833

========================================
2020.6.4
1.F90A1-S模块老化测试
	FILE *fphzk
	fphzk=fopen("c:\\hzk16","rb");
	
	"r" = "rt"
	打开一个文本文件，文件必须存在，只允许读
	"r+" = "rt+"
	打开一个文本文件，文件必须存在，允许读写
	"rb"
	打开一个二进制文件，文件必须存在，只允许读
	“rb+”
	打开一个二进制文件，文件必须存在，允许读写
	"w" = “wt”
	新建一个文本文件，已存在的文件将内容清空，只允许写
	"w+" = "wt+"
	新建一个文本文件，已存在的文件将内容清空，允许读写
	“wb”
	新建一个二进制文件，已存在的文件将内容清空，只允许写
	“wb+”
	新建一个二进制文件，已存在的文件将内容清空，允许读写
	"a" = "at"
	打开或新建一个文本文件，只允许在文件末尾追写
	"a+" = "at+"
	打开或新建一个文本文件，可以读，但只允许在文件末尾追写
	“ab”
	打开或新建一个二进制文件，只允许在文件末尾追写
	“ab+”
	打开或新建一个二进制文件，可以读，但只允许在文件末尾追写
2.3008测试
3.会议记录
	3008冷启动需要优化为 90s-120s定位成功
	储存为 8M+64k 需要储存500条记录
	可通过蓝牙或串口自动升级 电池电量需要优化
	15号天线调试
	电池电量检测脚  指示灯

========================================
2020.6.5
1.测试F90A1-S模块,看以前模块遇到的问题是否还会出现
	1)模块循环读标签工作时间
		读取总次数:41426 
		读取总时间:25170.089844 
	2)看模块是否还会出现上电后读写慢
		读写速度均正常,不会出现读写慢的问题
	3)

2.3008小区号测试
	了解日志中小区号指令
		peng这条指令上报的基站是附着的最近的基站信息\
		会根据地区不同，和移动而变化
		比如附近同样半径里面有6个基站，那么我们所取到的基站，可能就是这6个里面的任意3个组合
		理论上是不会变化，但是实际上是根据基站信号强弱而变化
	移动一段距离小区号有明显变化
	日志为20200605.txt
3.6000功能测试

========================================
2020.6.8
1.6000功能测试

2.3008测试
	定位器经过三天测试，主要存在如下问题：
	1、服务端下发数据，定位器不能更新（上传IP等）。
	2、从户内到户外，启动定位速度较慢。
	3、有的定位器在移动过程，服务器不再收到数据（未定位或未传输。原因不明确）。
	4、关于定位漂移，需要在定位获取数据，进行中值滤波（北京再沟通算法）。
	5、有时定位数据为00000.000，数据内容不正确。定位数据有效数据为数字或空，不能为0
	6、定位模块在移动状态下，不管处于什么环境（室内或室外），必须有定位数据或LBS数据。不能出现数据真空段。
	7、定位器在网络异常状态下，数据缓存必须处理，待网络恢复后，上传缓冲区数据。
	8、（新板卡）解决充电时，电量检测。
	9、（新板卡）解决使用状态下，电量检测。
	10、（新板卡）解决串口问题。
	11、（新板卡）解决蓝牙问题。
	12、（新板卡）解决指示灯问题。
	
	1)冷启动慢;
	2)定位不到(朝向是否正常,试天线效果);
	3)偏移问题;
	4)串口外接;
	5)描点按照定位时间来处理.

3.3008数据写入文档


========================================

6月10日定位测试汇总：
1.定位测试方式
	1)室内测试:观察各个针对问题更新的版本的log,查找问题并沟通;
	2)室外测试:进行了一次室外测试,1047置于楼下抬头可见天空处,连接电脑串口,
4404与4406拿在手上步行了约8分钟,期间天线朝上.
2.发现问题
	1)从户内到户外,启动定位速度慢,1047约10分钟,4406约4分钟,4404一直无法定位成功,;计划明天先更换天线进行测试,
	后续定位模块进行更新;
	2)后续模块出现IMEI号错误,导致内存溢出,不能与服务器进行交互,由于数据保存重发机制,导致设备一直无法正常工作,
	在后续版本中已经做了处理,今晚继续进行测试;
	3)在只有LBS定位时,也需要有定位时间;
	4)针对死循环问题需要做出重启机制,需在明天讨论针对什么情况进行软件重启并实现;
	5)不能出现真空数据段,目前未复现,计划明天继续测试.
3.解决问题
	1)服务端下发数据,定位器不能更新;
	2)定位数据为00000.000;
	3)数据保存问题.


========================================
6月11日定位测试汇总：
1.测试使用的3个模块在多次测试中从户内到户外启动速度不一致,有长有短,确认定位始终使用EPO辅助定位,明天更换大天线再进行测试;
2.程序存在死循环或是跑飞现象,现增加看门狗,在测试中出现不正常复位现象,需修正;
3.某时间段，数据重复上传，GPS定位时间，定位信息未改变，但平台已收到信息,目前调整gps搜星方式,目前看问题已经解决;
4.LBS定位时间不对,初始时间未处理.目前处理LBS定位时间改为正确时间,初始时间取本地网络时间,需要新版本验证;
5.IMSI号错误情况已经解决;


========================================
6月12日定位测试汇总
1.经过今天多次测试,不正常复位情况已经解决,之前出现不正常复位情况是由于-flash操作时间过长;
2.测试从户内到户外定位慢的问题,4404更换大天线进行测试;户外定点测试4406与1047一直正常工作,4404出现一次在屋檐下定位不成功的问题,之后换回小天线继续测试,未复现,可能需要查硬件;
3.经确认平台处理定位时间都做了加八小时的操作,模块做相应更新,解决lbs定位时间错误问题;
4.户外移动测试4次,设备从轨迹图上看均正常,但是陈总提出从户内到户外定位时间仍需优化.


========================================
2020.06.15
定位器待测试工作：
1.软件部分
	1)采用省电策略：
		（1）、静止小于5分钟，继续定位与传输；大于或等于5分钟，首先关闭GPS，然后判断模块在库房还是执勤？
		（2）、若在库房，每隔2个小时传输一次。
		（3）、若在执勤，判断静止时间是否超过20分钟？20分钟之内为2分钟传输一次，超过20分钟后，5分钟传输一次。
	2)测试下卡保存的定位数据以及实时定位数据的上发顺序;
	3)拆GPS天线后看轨迹(测试可正常走一段距离,拆GPS天线再走一段距离,再装上GPS天线走一段距离,看轨迹);
	4)优化定位速度. 快速切换,LBS定位,定位稳定性.
2.硬件部分
	1)电压电量检测以及充电状态检测;
	2)电池充电状态指示灯;
	3)定位器增加硬件复位孔;
	4)外接串口;
	5)定位器的充电、放电性能;
		(1)充电制作表格 20分钟为一个单位.
		(2)耗电 多个每隔半小时检测一次.
		(3)充满电耗时;
		(4)充满电连续定位持续时间(一分钟定位,二分钟传输);
		(5)充满电每天工作12小时,休息12小时.休息时两小时心跳一次.能持续多长时间;
	6)高低温测试;
	
	
========================================
2020.06.19

修改内容：
1.修改主控板和模组板上电时序不一致的导致传感器不工作，设备上电后初始化过程中，传感器配置失败，模组通讯成功后重新配置传感器；
2.电池3.5V以下设备不保存记录和log，模块不工作蓝色指示灯快闪100ms亮灭；
3.电池3.5~3.61V之间，蓝色指示灯慢闪，亮100ms灭1900ms，设备工作状态依赖于此前状态；
4.电池3.61V以上设备正常运作，蓝色指示灯仅在数据发送时亮；

修正休眠问题
(read check error, 两次gprs_update_ok后无任何工作进行)

test 01-------模拟振动
test 02-------使能平台参数同步功能
test 03-------除能平台参数同步功能
test 04-------全采
test 05-------单采
test 06-------查看存储
test 07-------清空

test 11-------6666服务器
test 12-------8090服务器
test 13-------248服务器

========================================
2020.06.22
1.3008测试
协议序号后76为经纬度  经纬度后38为定位时间
5B343630303431393134323134343134A000780000C3AA8B198CAE313630303236324231333933323632423130454432363242304532463131332E39383930323932322E353932333836 3230323030363232 313032363030 4F3030313031310078070800780000000000000000000000303030303036005D

5B343630303431393134323134343134A000780000C3AA8B198CAE313630303236324231333933323632423130454432363242304532463131332E39383930323932322E35393233383632303230303632323130323630304F3030313031310078070800780000000000000000000000303030303036005D

	1、充电电压为虚电压，例如实际只有80%，检测值未100%。
	2、启动定位慢。
	3、提供电量百分比、电源、指示灯变化的对应关系描述文档。
	4、今天发现特殊现象，设备不再定位或传输时，需把电池断电。程序是否已死机？

========================================
2020.06.23
1.3008问题
	1.就是刚刚说的指示灯的问题,蒋工说暂时可以先不处理.
	2.我刚刚在楼下测试了三轮,确实有的定位快有的定位慢,但是不会像客户这边反馈的4.5分钟 8.9分钟这么慢.我再多测试几轮
	3.这个我们现在在做处理.
	4.需要他们给出log.

5B343630303431393134323134343134A000780000C3AA8B198CAE323530303236324231333933323632423130454432363242313241463131332E39383936303132322E3539323333333230323030363233303334353132 20 3030313031310078025800780000000000000000000000303030303036C05D000000000000468A
5B343630303431393134323134343133A000780000CEF33B0845DD323430303236324231333933323632423130414632363242313045443131332E39383837333132322E3539313936393230323030363233303430343134 14 30303130313100780258007800000000000000000000003030303030368E5D
5B343630303431393134323134343131A000780000CD4006B295A7323330303236324231333933323632423130454432363242313241453131332E39383930393832322E3539323037333230323030363233303430363136 20 3030313031310078025800780000000000000000000000303030303036965D
5B343630303431393134323134343133A000780000CEF33B0845DD323530303236324231333933323632423130454432363242313239423131332E39383933333432322E3539323434303230323030363233303534303133 0E 3030313031310078025800780000000000000000000000303030303036875D000000000000DB0F


0E 电量 3.559V 13:42开始充电  15:45充满
电量 3.593V 16:24开始充电

06B5信号测试异常  增加延时  已经处理完成

========================================
2020.06.28
1.3008新板装壳测试
2.06B5确认485问题


========================================
2020.06.29
1.06B5测试程序升级,解决485通信串口问题
	更新06B5mntetc_20200629_factory.tar.gz
2.3008振动测试,插拔排针后复现一次振动传感器无法正常工作问题,
重新上电后恢复正常,后续未复现该问题.


========================================
2020.06.30
1.三火3008测试
	传感器问题未解决,无版本更新,4节电池留在了三火
	定位慢问题应为天线朝向问题
	电池问题已做优化
	
========================================
2020.07.1
1.3008测试
	出现振动传感器失效问题,依旧不知道原因
2.06B5烧录
	烧录过程:
	(1)板上好SD卡,接上工装,将USB线接上电脑;
	(2)可以开两个终端,一个终端使用minicom操作ttyUSB0设备,一个终端在/root目录下操作;
	(3)终端2可通过lsusb看到一个usb设备为Atmel SAM-BA,此时可运行/root目录下的roast_it.sh脚本;
	(4)终端1使用minicom操作ttyUSB0设备,在终端2执行脚本的同时可看到USB口有对应操作;
	(5)终端1进入SD卡操作,输入用户名为root;
	(6)终端1执行./prgit进行烧录;
	(7)烧录成功后输入poweroff重启设备;
	烧录完成.
	
	恢复分区方法
	(8)在boot操作界面输入edit bootargs进行恢复分区;
	(9)将0分区1扇区改为1分区2扇区(操作SD卡)
		root = /dev/mmcblk1p2
		执行saveenv保存到flash中
		

========================================
2020.07.2
1.06B5可正常烧录
	将06B5mntetc_20200629_factory.tar.gz拷贝到SD卡中并修改脚本
2.3008烧写线更新
3.06B5测试新板 
	测试3台06B5用脚本4G可正常使用
	测试1台整机,功能正常使用
4.协助烧写06B5

========================================
2020.07.3
1.3008本地测试
2.06B5协助烧录
3.6000功能测试
4.完成员工月度绩效考核表;

========================================
2020.07.6
1.与丹灵确认3008问题;
2.6000功能测试,确认代码逻辑;
3.06B5烧录.

========================================
2020.07.7
1.6000功能测试;
2.06B5烧录;
3.计算机网络原理

========================================
2020.07.8
1.6000功能测试;
2.06B5烧录;
3.数据结构导论


========================================
2020.07.9
1.科技园调试英菲信特3008;
(1)测试组装报文
5B343630303431393134323134343133A000780000000000000000323630303133393332363242313045443236324231324146323632423131332E39383837373032322E35393230323632303230303730333032353634355D30303130313100781C2004B000000000000000000000003030303030366A5D
[460041914214413\xA0\x00x\x00\x00\x00\x00\x00\x00\x00\x00""26001393262B10ED262B12AF262B113.98877022.59202620200703025645]001011\x00x\x1C \x04\xB0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00""000006j]
(2)CRC校验
uint8_t crc8_maxim(uint8_t *data, uint_len length)
{
	uint8_t i;
	uint8_t crc = 0;         // Initial value
	while(length--)
	{
		crc ^= *data++;        // crc ^= *data; data++;
		for (i = 0; i < 8; i++)
		{
			if (crc & 1)
				crc = (crc >> 1) ^ 0x8C;        // 0x8C = reverse 0x31
			else
				crc >>= 1;
		}
	}
	return crc;
}
(3)流程图描述
2.6000功能测试;
3.每日了解新3008进度.
4.3008IMEI号与IMSI号.  OTA升级.

========================================
2020.07.10
1.3008测试;
	更新V208,初次有振动无法触发问题,后修正
	两台均更新为208
2.了解新3008进度;
3.06B5烧录.

========================================
2020.07.13
1.测试三火3008板

出现2G拨号不上情况,使用其他设备也无法拨号,查询卡是否欠费,
未欠费,两块底板一块无法拨号另一块振动唤醒有问题

	收←◆gprs AT+CREG?
	+CREG: 0,2

	AT+CREG 网络注册和漫游

	命令发送(command):

	AT+CREG=

	命令响应(Response):

	+CREG :, [,,]

	参数说明:

	0 : 禁止网络注册主动提供结果代码（默认设置）
	1 : 允许网络注册主动提供结果代码：+CREG：
	2 : 启用网络注册和位置信息非请求结果码+CREG: [,,]


	0：未注册，终端当前并未在搜寻新的运营商
	1：已注册本地网络
	2：未注册，终端正在搜寻基站
	4：未知代码
	5：已注册，处于漫游状态

========================================
2020.07.14
1.测试三火3008板;
2.烧录06B5;
3.计算机网络原理;
4.英菲信特3008与付总沟通.

========================================
2020.07.15
1.英菲信特3008报文与付总确认;
测试报文:
	HEX:5B343630303431393134323134343133A000780000000000000000323630303133393332363242313045443236324231324146323632423131332E39383837373032322E35393230323632303230303730333032353634355D30303130313100781C2004B000000000000000000000003030303030366A5D
	十六进制字符串:[460041914214413\xA0\x00x\x00\x00\x00\x00\x00\x00\x00\x00""26001393262B10ED262B12AF262B113.98877022.59202620200703025645]001011\x00x\x1C \x04\xB0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00""000006j]

2.lora模块调试;
3.三火3008测试,协助丹灵测试;
	丹灵沟通,明天测试3块板,楼下定位无误后寄出

========================================
2020.07.16
1.三火调试3008
	(1)功耗优化沟通
	(2)模块进行升级 g-sensor
	(3)外出测试3次,定位效果不好为天线原因
	(4)版本升级为2.0.9  用于查看搜星数量
	
========================================
2020.07.17
1.	顺舟lora模块调试
	看模块说明书；用minicom试验；用串口通信实现

	看完线路图和说明书相关部分就知道怎么做了：
	LoRa_cfg， LoRa_pwr，LoRa_rst全低时为关机状态
	开机过程：LoRa_pwr 高；延迟；LoRa_rst高
	完成配置后LoRa_cfg高，进入透明通讯状态

	ttyS3串口,38400 8N1

	echo 1 > /mc2017/dev/LoRa_pwr   
	sleep 2
	echo 1 > /mc2017/dev/LoRa_rst
	echo 1 > /mc2017/dev/LoRa_cfg

	+++

使用点对点配置,根据文档操作出错

2.三火3008外出测试轨迹

========================================
2020.07.20
1.

uint8_t crc8_maxim(uint8_t *data, uint_len length)
{
    uint8_t i;
    uint8_t crc = 0;         // Initial value
    while(length--)
    {
        crc ^= *data++;        // crc ^= *data; data++;
        for (i = 0; i < 8; i++)
        {
            if (crc & 1)
                crc = (crc >> 1) ^ 0x8C;        // 0x8C = reverse 0x31
            else
                crc >>= 1;
        }
    }
    return crc;
}




========================================
2020.07.21
1.3008服务器更新功能
(1)下发数据CRC校验修正,ascii转bcd码
	1)3des  unsigned char* 
	
	unsigned char str1[1024] = "1231231230000000";

	for(int ii = 0;ii<16;ii++)
	{
		qDebug()<<"str1"<<ii<<" is:"<<str1[ii];
	}

	char *str2= (char *)str1;
	QString sss = QString(QLatin1String(str2));
	sendInput->insertPlainText("\n");
	sendInput->insertPlainText(sss);

	Encryption_3EDS(str1,test_key,1,16);
	str2= (char *)str1;
	sss = QString(QLatin1String(str2));
	sendInput->insertPlainText("\n");
	sendInput->insertPlainText(sss);

	Encryption_3EDS(str1,test_key,0,16);
	str2= (char *)str1;
	sss = QString(QLatin1String(str2));
	sendInput->insertPlainText("\n");
	sendInput->insertPlainText(sss);


	2)QString转unsigned char*方法2
		QString TestStr = QString("Test");
		std::string TestString = tempStr.toStdString();
		unsigned char* DataChar = const_cast<unsigned char *>((const unsigned char*)TestString.c_str());


	3)10进制转为16进制
	for(int ii = 0;ii<length;ii++)
	{
		//qDebug()<<"c2"<<ii<<" is:"<<c2[ii];

		unsigned char buffer [3]; //用于存放转换好的十六进制字符串。由于只要支持2位整数，所以长度3即可

		if (c2[ii] / 16 < 10)   //计算十位，并转换成字符
			buffer[0] = c2[ii] / 16 ;
		else
			buffer[0] = c2[ii] / 16 - 10 ;
		if (c2[ii] % 16 < 10)   //计算个位，并转换成字符
			buffer[1] = c2[ii] % 16 ;
		else
			buffer[1] = c2[ii] % 16 - 10 ;
		buffer[2] = '\0';   //字符串结束标志
		//qDebug()<<"buffer[0] is:"<<buffer[0];
		//qDebug()<<"buffer[1] is:"<<buffer[1];

		c2[ii] = buffer[0]*10+buffer[1];

		qDebug()<<"c2"<<ii<<" is:"<<c2[ii];
	}
	4)//ascii转bcd码,报文字母需要大写
	static char bcd2ascii[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};

	static char ascii2bcd1[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
	static char ascii2bcd2[6]  = {0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F};
	int ServerConnection::ASC2BCD(unsigned char *bcd, const char *asc, int len)
	{
		char c = 0;
		char index = 0;
		char i = 0;

		len >>= 1;

		for(; i < len; i++) {
			//first BCD
			if(*asc >= 'A' && *asc <= 'F')
			{
				index = *asc - 'A';
				c  = ascii2bcd2[index] << 4;
			}
			else if(*asc >= '0' && *asc <= '9')
			{
				index = *asc - '0';
				c  = ascii2bcd1[index] << 4;
			}
			asc++;

			//second BCD
			if(*asc >= 'A' && *asc <= 'F') {
				index = *asc - 'A';
				c  |= ascii2bcd2[index];
			} else if(*asc >= '0' && *asc <= '9') {
				index = *asc - '0';
				c  |= ascii2bcd1[index];
			}
			asc++;

			*bcd++ = c;
		}

		return 0;
	}

383638393537303436333635373430A100390000000000000000303131003C025800780F3132302E3037392E3031392E3034391F9A00

开始标识:5b
唯一标识:383638393537303436333635373430
协议序号:a0
数据长度:0078
指定终端ID:3132333435363738
信号强度:3238
运营商号:3030
基站号1:32343743
小区号1:30453130
基站号2:00000000
小区号2:00000000
基站号3:00000000
小区号3:00000000
经度:3131332e393530313335
维度:32322e353432313335
定位时间:3230323030373231303535383230
电量:56
防拆状态:00
振动状态:31
自动激活开关状态:00
充电状态:00
定位状态:00
通信状态:00
工作周期:0078
心跳周期:1c20
静止通信周期:012c
手机号码:0000000000000000000000
设备编号:313233343536
CRC8:90
结束标识:5d



========================================
2020.07.22
1.3008服务器更新功能
(1)接收端CRC进行校验
用于接收数据的校验
5B343630303431393134323134343035A000780000F68AAFA47B23323030303133393332363242313045443236324231324146323632423131332E39383835313832322E3539313934363230323030373231303631303337553030313031310078025801680000000000000000000000303030303036405D

34 36 30 30 34 31 39 31 34 32 31 34 34 30 35 a1 00 39 00 00 00 00 00 00 00 00 30 31 31 00 b4 02 58 01 68 0f 31 32 30 2e 30 37 39 2e 30 31 39 2e 30 34 39 1f 9a 00

34 36 30 30 34 31 39 31 34 32 31 34 34 30 35 a0 00 78 00 00 f6 8a af a4 7b23323030303133393332363242313045443236324231324146323632423131332e39383835313832322e3539313934363230323030373231303631303337553030313031310078025801680000000000000000000000303030303036


特殊的一条接收数据 确认为缺少一个0导致报文比对不匹配
5B343630303431393134323134343035A000780000F68AAFA47B23323030303133393332363242304532463236324230453131323632423131332E39383832333532322E35393138373932303230303732313038323730380E30303130313100780258016800000000000000000000003030303030360E5D
  343630303431393134323134343035A000780000F68AAFA47B23323030303133393332363242304532463236324230453131323632423131332E39383832333532322E35393138373932303230303732313038323730380E3030313031310078025801680000000000000000000000303030303036

将整条报文写入文件

5b383638393537303436333635373430a000783132333435363738323930303234374330453130000000000000000000000000000000003131332e39353132333832322e35343131373032303230303732323033343634375600300000000000b4025801680000000000000000000000313233343536665d

开始标识:5b
唯一标识:383638393537303436333635373430
协议序号:a0
数据长度:0078
指定终端ID:3132333435363738
信号强度:3239
运营商号:3030
基站号1:32343743
小区号1:30453130
基站号2:00000000
小区号2:00000000
基站号3:00000000
小区号3:00000000
经度:3131332e393531323338
维度:32322e353431313730
定位时间:3230323030373232303334363437
电量:56
防拆状态:00
振动状态:30
自动激活开关状态:00
充电状态:00
定位状态:00
通信状态:00
工作周期:00b4
心跳周期:0258
静止通信周期:0168
手机号码:0000000000000000000000
设备编号:313233343536
CRC8:66
结束标识:5d

(2)服务器三个周期改为QLineEdit输入读取进行下发
QLabel* qLabel=nullptr;
QLabel* qLabel1=nullptr;
QLabel* qLabel2=nullptr;
QLabel* qLabel3=nullptr;
QLabel* qLabel4=nullptr;
QLabel* qLabel5=nullptr;
QLineEdit* clientAddressInput=nullptr;
QLineEdit* clientPortInput=nullptr;
QLineEdit* Workcycle=nullptr;
QLineEdit* Heartbeatcycle=nullptr;
QLineEdit* Quiescentcycle=nullptr;

5b383638393537303436333635373430a000783132333435363738323630303234374330453130000000000000000000000000000000003131332e39353136323832322e35343039353232303230303732323036333431345600300000000000b4025801680000000000000000000000313233343536935d
38 36 38 39 35 37 30 34 36 33 36 35 37 34 30 A1 00 36 00 00 00 00 00 00 00 00 30 31 31 00 b4 02 58 01 68 0C 31 32 30 2E 37 39 2E 31 39 2E 34 39 1F 9A 00
5B343630303431393134323134343035A10036000000000000000030313100B4025801680C3132302E37392E31392E34391F9A00ED5D


========================================
2020.07.23
1.英菲信特3008测试
2.三火3008测试
3.3008服务器更新功能

========================================
2020.07.24
1.丹灵问题协助查看
重要
	1)这边的5个模块抓紧走一遍流程
	2)lbs漂移的厉害,看看如何优化
不重要
	1)串口下发更改地址和端口不太灵,有的时候不能及时更改,看看能不能优化
	2)冷启动定位速度看看能不能再优化
2.英菲信特3008数据查看
3.lora模块调试
	按照点对点配置文档进行配置
	遇到问题:
	1.修改完串口波特率之后我修改为9600无法操作,修改回38400才能正常操作,但是执行完AT+UARTBR=9600返回的是OK,
	在寄回模块升级前确定是需要修改串口的波特率才能继续操作的.
	2.进入透传模式后要怎么操作了才能通信?
	
========================================
2020.07.27
1.丹灵问题协助查看
	现象:设备在早上7:07之后一直在传同一条数据,在早上9:41下发切换服务器到java服务器后还是在传这条相同的数据,在9:56的时候设备重启,连接到java服务器,定位数据正常. 
	1)数据一直重发的问题,上次问重发多次设备是会重启的,现在好像还是未重启,服务器这边确认是有一直受到数据的.
	2)本地保存的问题,在早上7:27-9:56的数据重启后并未重新上传.重启后直接上传的是9:56之后的数据了. 
2.lora模块调试
使用minicom按文档配置,测试通信返回error.
3.三火3008测试

3008协议更新
	定位状态新定义：标识数据传输频率（单位为分钟）

========================================
2020.07.28
1.lora模块调试
	使用bcd码调试正常
2.三火调试3008
	串口升级
	若三对基站与小区号都一致，只保留一对即可
	服务端下发定位周期为60秒，定位上报数据中的定位周期为120.需要根据下发的定位周期，上报定位数据的定位周期
	振动状态
	定位周期
版本更新为LXR3008_V3_BOOT LXR3008V300 
先使用STM32 ST-LINK Utility烧录LXR3008_V3_BOOT,再使用程序下载工具使用串口进行LXR3008V300的升级,下载成功后需要等待40s-60s左右

========================================
2020.07.29
1.南昌设备试点
新服务器未配置id号,已解决
设备工作正常
枪支对应IMEI号:
16057728-460044292608267
16057205-460044292608354

========================================
2020.07.30
1.南昌枪支管理系统
网址:http://223.82.109.183:8087/qzdwpt
账号:fgsadmin360100304
密码:123456
查看实时数据,轨迹

========================================
2020.07.31
1.南昌枪支管理系统查看数据
	服务器调试，地图服务停止
30号数据正常,轨迹正常.


========================================
2020.08.3

8354
定位时间：	2020-08-03 12:59:20
数据插入时间：	2020-08-03 13:02:11

8267
定位时间：	2020-08-03 12:49:23
数据插入时间：	2020-08-03 12:49:27
定位时间：	2020-08-03 13:50:37
数据插入时间：	2020-08-03 13:50:41



========================================
2020.08.4
1.英菲信特3008调试
(1)一直报UNDER_VOLTAGE WARNING  用表测量为4.23V
(2)八月份的定位时间报文有误
5b343630303431393134323134343130a0007831323334353637383331303032343743304531300000000000000000000000000000000000000000000000000000000000000000000000    5600300000000000b4025801680000000000000000000000313233343536fe5d
5b343630303431393134323134343130a000783132333435363738323030303234374330453130000000000000000000000000000000003131332e39353136363532322e353432303037  3230323030373237303830343136 5200310000000000b4025801680000000000000000000000313233343536c25d
5b343630303431393134323134343130a000783132333435363738313530303234374331343439000000000000000000000000000000003131332e39353130313232322e353431333732  3230323030382033303834343231 5500300000000000b40258016800000000000000000000003132333435363f5d
5b343630303431393134323134343133a000780000cef33b0845dd3939303031333933323632420000000000000000000000000000000000000000000000000000000000000000000000  3230323030383034303132313435 453030313031310078025801680000000000000000000000303030303036c45d
(3)卡方向有误直接死机
(4)复位开关无效
(5)使用移动卡一直 ←◆at+creg? +CREG: 2,0 始终拨号不成功,后续为
[10:59:14.310]收←◆
UNDER_VOLTAGE WARNING 

[10:59:14.828]收←◆
wakeup from timer...
[10:59:15.680]收←◆
NORMAL POWER DOWN 

[10:59:16.076]收←◆\0
无复位重启,直接死机
(6)换设备后启动正常,发现数据上传不正常现象
看log显示send ok实际服务器未收到数据
(7)log逻辑还未理清
2.lora模块调试


========================================
2020.08.5
英菲信特调试3008
(1)流程为 上电后启动gps模块进行搜星,搜星后拨号连接服务器上传数据
   1分钟内搜星成功会进入浅休眠,更新5个字段,如果未搜星成功则持续搜星直到超时4分钟,
   在上报时间内持续进行搜星操作,如果搜星后时间达到了上报时间则上报保存的数据.
   总是会在搜星或是超时后才会进行连接服务器上报数据操作.

(2)振动唤醒问题正在测试,如果在休眠之后心跳之前给到振动会出现振动失效的情况.版本更新后已经解决

(3)按次数标记深休眠,达到下发数据次数则进入深休眠.

(4)周期为工作周期是多久上报一次数据,固定了一分钟进行一次定位(可正常定位情况下)

(5)5个字段:gps信息,lbs信息,信号强度,设备电量,内置时间
   收←◆$GNRMC,080611.000,A,2232.5365,N,11357.0695,E,0.33,203.14,050820,,,A*7A
   $G,203.14,T,,M,0.33,N,0.61,Ka,A*t+qgnssc=02,080611.000,2232.5365,N,11357.0695,E,1,4,1.59,230.8,M,-2.5,M,,*59
   $A,A,3,29,05,30,06,,,,,,,,,1.87,1.5鵟0
   OK
   at+creg?
   +CREG: 2,1,"247C","0E10"

   OK
   at+csq
   +CSQ: 31,0

   OK
   at+cbc
   +CBC: 0,90,4059

========================================
2020.08.6
三火3008
LXR3008，有几个问题，需要定版。
1.增加LBS功能，是否不再更改？
2.模块MC20与MCU，到底是两个串口还是一个串口？
3.数据发送不成功，是否允许设备休眠，怎么个休眠机制？
4.网络异常情况下，记录存储满之后，是否还需允许循环存储？
5.程序是否按最终正式版调试？

英菲信特3008测试
460041914214411设备1不休眠
460041914214411设备2不休眠
460041914214411设备3未升级成功且出现连接服务器失败问题
460041914214411设备4定位数据不连续有丢失心跳唤醒打印不正常
460041914214411设备5不休眠

========================================
2020.08.7
1.英菲信特3008反馈
	该版本设备看log不进行休眠,连接服务器收发完数据后直接wakeup from timer...
2.试点设备监测
	定位信息有数据重复,确认是否是会剔除部分lbs数据也会将部分lbs数据转为gps数据.
	
英菲信特3008测试记录详细见:20200806英菲信特3008测试记录


========================================
2020.08.10
1.460041914214411设备2死机   (确认为电池问题)
log:
	[11:18:20.177]收←◆
	wakeup from timer...
	[11:18:24.182]收←◆at
	OK
	ate1
	OK
	at+qsclk=1
	OK
	at+qgnssc=1
	OK

	[11:18:25.938]收←◆$PMTK011,MTKGPS*08
	$PMTK010,001*2E

	[11:18:26.025]收←◆
	Call Ready

	[11:18:26.737]收←◆$PMTK011,MTKGPS*08
	$PMTK010,002*2D

	[11:18:26.782]收←◆$GNRMC,235942.870,V,,,,,0.00,0.00,050180,,,N*5B
	$VTG,0.00,T,,M,0.00,N,0.00,K,N*2C
	$NGGA,235942.870,,,,,0,0,,,M,,M,,*52
	$PGSA,A,1,,,,,,,,,,,,,,,*1E
	$BDGSA,A,1,,,,,,,,,,,,,,,*0F
	$GPGSV,1,1,00*79
	$BDGSV,1,1,00*68
	$GNGLL,,,,,235942.870,V,N*60

	[11:18:27.262]收←◆\0\0

2.电池充满电后仍然无休眠状态,始终为连接服务器收发完数据后直接wakeup from timer...

3.试点3008数据有飘移现象,7205较为严重.


========================================
2020.08.11
英菲信特3008
存在问题:
1.版本更新后设备不休眠,始终为连接服务器收发完数据后直接wakeup from timer...,该打印应为心跳时出现;
2.设备3未升级成功;
3.工作周期目前在英菲信特3008上还为多久上传一次,不是多久定位一次;
4.定位不连续,由于搜星时间问题成功定位时间不确定,导致定位时间不连续,休眠时间也不稳定;

6000增加背光打印测试
	
	
=======================================
2020.08.12-8.13请假

========================================
2020.08.14
1.定位轨迹查看,7728轨迹较正常,7205有点位缺失或是飘移现象
2.三火3008新板测试
	(1)出现定位时间为1月1号情况;
	(2)不明情况的复位;
	(3)出现(AT+CREG? 0,2)导致复位的情况;
	
========================================
2020.08.17
1.定位轨迹查看

2.英菲信特3008数据查看
	两台设备的上传数据在有振动时是正常的一分钟左右一条数据,
	在低功耗模式时大概是正常的十一分钟(心跳+定位)一条数据.
	4411是数据在今天凌晨左右终止  
	4409数据正常.  
	有存在数据丢失问题.

3.三火无新版本

========================================
2020.08.18
1.英菲信特3008问题确认
	丢失数据，应该是和连接NG有关
版本更新,数据稳定一分钟一条

2.试点轨迹查看

========================================
2020.08.19
1.英菲信特3008数据查看
	日数据到今天凌晨2.22分都是正常的时间间隔
	后续无数据
2.三火3008还未更新
3.试点轨迹查看

========================================
2020.08.20
1.3008服务器修改,定位状态字段改为标识数据传输频率
2.试点轨迹查看
3.4409在10:39和13:22丢失了数据,但是实际上数据有上传,但是imsi号读取出错
	记录保存

========================================
2020.08.21
1.英菲信特3008imsi号两次错误.
	生成了两个不同的文件,将丢失数据保存在了两个文件中
	
2.试点轨迹查看.

========================================
2020.08.24

协议序号后76为经纬度  经纬度后38为定位时间

1.英菲信特3008测试

5b343630303431393134323134343039a000783132333435363738333130303234374330453130000000000000000000000000000000003131332e39353134383832322e35343139383732303230303931353038343933352400300000000000b4025801680000000000000000000000313233343536975d
经度:113.951488
纬度:22.541987
定位时间:20200915164935

(1)出现报文定位时间错误问题

2.修改服务器日期处理,如果时间+8小时候大于24则日期进1
5B343630303431393133393139343130A000780000C64D9FAA2F31323630303030334331304544000000000000000000000000000000003131332E39393339313232322E35393438363632303230303630323037303234386 3303031303131007800B4012C0000000000000000000000303030303036CD5D
5b343630303431393134323134343039a000783132333435363738333130303234374330453130000000000000000000000000000000003131332e56343834323832322e35343039303832303230303832313137303233371a00300000000000b40258016800000000000000000000003132333435362c5d
5b343630303431393134323134343039a000783132333435363738333130303234374330453130000000000000000000000000000000003131332e56343834323832322e353430393038 3230323030383231313730323337 1a00300000000000b40258016800000000000000000000003132333435362c5d

//日期进位,如果时间过了24时,则日期进1,未做30号31号处理
if(returnmsg.size() == 14 && returnmsg.mid(9,1).toInt() < 8 )
{
	//记录日期低位并加一
	QString date = QString::number((returnmsg.mid(7,1).toInt() + 1));
	//保存日期后续数据
	QString savadata = returnmsg.mid(8,6);
	//将年,月,修改后的日期以及时分秒拼接
	returnmsg = returnmsg.left(7) + date + savadata;
}

3.丹灵121.69.131.202:8098服务器测试
确认为服务器问题

========================================
2020.08.25
1.3008服务器修改
(1)日期进位修正,增加对长度判断用于保证判断的是日期;
(2)更改服务器的ip和端口号
2.试点设备监测
	7205有点位缺失或是飘移现象
3.英菲信特3008定位信息查看
	未出现id号异常错误
	定位周期间隔时间正常	

========================================
2020.08.26
1.试点设备监测
	8354(205)定位信息查看不到实时数据,点位直接描完点被滤除
	8267(728)定位信息未更新
	不知是否因为是定位失败用的是lbs定位直接被舍弃,导致地图少了很多点,轨迹画出差距较大
2.英菲信特3008沟通
3.定位模块上传数据后，等待响应的最大超时时间为30s

========================================
2020.08.27
1.英菲信特3008问题
(1)定位周期需要更改逻辑,按时间来处理
(2)升级功能:串口升级或是无线升级
(3)冷启动慢

2.试点设备监测
3.0810天线沟通
4.英菲信特3008测试
目前逻辑正常工作,周期间隔正常.

	
========================================
2020.08.28
1.测试英菲信特3008

5B343630303431393134323134343039A100390000000000000000300231003C0258012C0F3131342E3131352E3230392E31333500F800655D
5B 34 36 30 30 34 31 39 31 34 32 31 34 34 30 39 A1 00 39 00 00 00 00 00 00 00 00 30 02 31 00 3C 02 58 01 2C 0F 31 31 34 2E 31 31 35 2E 32 30 39 2E 31 33 35 00 F8 00 65 5D

========================================
2020.8.31
1.英菲信特3008测试
数据正常
2.试点设备监测

========================================
2020.9.01
1.英菲信特3008测试
数据正常
2.试点设备监测

========================================
2020.9.02
1.英菲信特3008测试
数据正常
2.试点设备监测
丹灵提出飘移问题

========================================
2020.9.03
1.英菲信特3008测试
数据正常
2.试点设备监测
3.9013配置监测
	123456脚接传感器,接上220V电源
	通过485接到电脑进行数据监测

========================================
2020.9.04
1.英菲信特3008测试
数据正常
2.试点设备监测

3008:
1.在无卫星信号时,上传的经纬度错误;(已修改)
2.串口增加控制指令;(可通过串口修改设备连接的ip和端口等,用于测试)
3.工作周期为多久生成一条记录,而不是多久上报一次数据;
4.协议中的定位状态字段重新定义,定义为标识数据传输频率（单位为分钟）;
5.由于工作周期需可配置,按之前的次数来进行休眠的判断应会有误差,改为按时间来进行休眠与心跳的判断;
6.数据保存500条,需要在掉电后仍然能够保存,离线数据在连上网络后按先进后出顺序上传,离线数据上传时有新的定位信息则优先上传新的定位信息;
7.需通过串口或是无线方式给设备进行升级;(ST-LINK)
8.优化冷启动的定位速度;
9.需尽可能获取到三组小区号基站号.

========================================
2020.9.07
1.英菲信特3008测试
	关于离线数据:23:30之后数据到23:41之间的数据丢失(还在开发阶段)
	可通过后续数据查看
	
	
2.试点设备监测
	无法登陆服务器
	
	
========================================
2020.9.08
1.英菲信特3008测试
	(6)数据保存500条,需要在掉电后仍然能够保存,离线数据在连上网络后按先进后出顺序上传,离线数据上传时有新的定位信息则优先上传新的定位信息. 
	可以存500条，掉电后保存
	离线数据只能做先进先出，这个也是缓存数据的一般规则
	上传的过程没法间断，就算存满500条，上传时间500*0.6大约300秒
	
	数据存500条后须先删除先进的数据
	
2.试点设备监测	
	可正常登陆

02142 数据结构导论
03173 软件开发工具
04757 信息系统开发与管理

========================================
2020.9.09
1.英菲信特3008测试
数据正常
2.试点设备监测
3.LXR3008问题描述（20200909）

========================================
2020.9.10
1.英菲信特3008测试
	设备寄回
2.试点设备监测

========================================
2020.9.11
1.英菲信特3008测试
(1)服务器周期修改
	初次观测设备未之修改心跳周期
	但是振动未唤醒
	电池已经采购
2.试点设备监测
3.5000板烧录
	jtag烧录PSAM不成功

========================================
2020.9.14
1.英菲信特3008

在无卫星信号时,上传的经纬度错误(已解决)
出现报文定位时间错误(测试未出现,已解决)
协议中的定位状态字段重新定义,定义为标识数据传输频率（已解决）
由于工作周期需可配置,按之前的次数来进行休眠的判断应会有误差,改为按时间来进行休眠与心跳的判断(已解决)

========================================
2020.9.15
1.
460041914214411
460041913919410

问题1:收到下发数据不会及时切换平台


2.三火3008
V301版本烧录后无法成功启动

更新V310版本
LBS目前用不了，走LBS的，给固定了一个经纬度
boot-app是合并了的，直接用stlink，任何设备都可以烧录
310是app应用程序，运行在已有bootloader的设备上

13:55 三火板和英菲信特板同时振动 12510
15:25 三火板和英菲信特板同时振动 141020


14:36分三火设备不知原因重启了一次,并将连接的服务器重置
16:11分复现

========================================
2020.9.16
1.三火3008
(1)不知原因重启后服务器会重置为三火的服务器
(2)心跳周期3分钟固定
(3)定位时间为0
(4)定位状态未改为新定义,目前上传频率为2分钟一次
(5)用串口输入ip和端口来更改
(6)下发更改ip失败

枪支加好了
外网访问地址 http://121.69.131.202:8097/qzdwpt/
用户名/密码 ： csqy/123456
枪号 4411， 9410
新系统定位监控模块，以每次领取归还记录为一次轨迹，如过今天进行了两次领取归还，页面显示最近一条轨迹，点击左侧列表中名称，可以切换轨迹；
如果 一次领取，跑了多条轨迹后才归还，那么页面叠加显示多条轨迹，会比较混乱。建议每次测轨迹都做一下领取交还；
**查询轨迹日期根据领取日期查询

121.69.131.202 8098

5B343630303431393134323134343131A100390000000000000000300231003C0258012C0F3132312E3036392E3133312E3230321FA200155D

========================================
2020.9.17
1.三火3008升级
stlink升级地址为0x08004000
2.三火版本升级为V311
长度，frame_start，frame_end，imei，result，enable_change任何一项校验不过，都不允许更改
3.查看121.69.131.202:8097轨迹访问不成功
4.上午7205定位效果差

========================================
2020.9.18
1.三火3008电池充电有问题
2.英菲信特3008定位漂移到合肥

三火3008
1.充电问题,两台用磁吸线接上不亮灯一台正常亮灯但是充了一个上午一个下午用一晚上加一早上就没电了;
2.V311版本LBS定位还不能换用,需要修正;
3.定位飘移能否优化一下,9410用的是三火的板子.
4.老陈的一个需求,能不能使用串口来配置ip和端口,比如输入IPPORT:120.079.019.049:8090 就能改为这个ip和端口.

========================================
2020.9.21
1.三火3008测试
2.英菲信特3008测试
3.未进行安全加密芯片调试
4.丹灵沟通看轨迹


========================================
2020.9.22
1.三火3008测试
三火充电头为5V
串口增加命令IPPROT+冒号+XXX.XXX.XXX.XXX+冒号+XXXX


========================================
2020.9.23
1.英菲信特3008连接多次服务器失败后会进入休眠模式
之后无动作(后发现是两小时心跳),振动后唤醒但是很快进入不工作状态
[09:27:35.147]收←◆at+qiopen="tcp","121.069.131.203","08098"
OK

[09:27:35.832]收←◆
CONNECT FAIL

[10:34:30.155]收←◆
20200910, wakeup from vibra...
[10:34:34.140]收←◆at
OK

+CPIN: READY
ate1
OK
at+qsclk=1
OK
at+qgnssc=1
OK

[10:34:36.306]收←◆
Call Ready

[10:34:37.518]收←◆\0

2.有两台三火3008的R7未上料
上料的一台不亮灯  剩余两台不上料的设备亮灯
去掉第三台的R7 第三台亮绿灯

16:44 3.84V
17:37 4.03V 充电正常

========================================
2020.9.24
1.三火3008充电正常亮绿灯
(1)	(数据重发机制没启动)
	log中没有下发数据
	还是有不明重启情况
	
	
(2)
	14:30充电 电池电量为17
	16:00绿灯 充电正常

5B343630303431393134323134343131A0 00780000E4994BFFF8CC323530303133393332363242313045440000000031324146000000003131332E39383832333532322E353931393730 3230323030393234303235333530 23 303131300231003C0258012C0000000000000000000000303030303036885D000000000
20200924025350 电量23  76 38 28 

5B343630303431393134323134343131A0 00780000E4994BFFF8CC323830303133393332363242313045440000000031324146000000003131332E39383937333132322E353931363030 3230323030393234303334333536 23 303131300231003C0258012C0000000000000000000000303030303036555D00000000000082F6
5B343630303431393134323134343131A0 00780000E4994BFFF8CC323830303133393332363242313045440000000031324146000000003131332E39383930363732322E353932353438 3230323030393234303433363430 17 303131300231003C0258012C0000000000000000000000303030303036975D1A

访问地址：http://121.69.131.203:8097/qzdwpt/ 
上报地址：121.69.131.203:8098

2.英菲信特3008
LXRIPORT:121.069.131.203:08098

14:20 460041914214411,460041913919410开始测试

3.试点设备监测
 8354(7205) 下午轨迹显示不更新
	电池电量低
 8267(7728) 轨迹正常
	电池电量为57
========================================
2020.9.25
1.试点设备监测
7205停止工作

2.三火3008
重启后连接三火服务器,三火服务器下发的ip和端口为丹灵更改前的ip和端口


5B343630303431393134323134343131A0 00780000E4994BFFF8CC323830303133393332363242313045440000000031324146000000003131332E39383838303832322E353931393231 3230323030393235303231303232 18 303131300131003C1C2004B00000000000000000000000303030303036B45D
5B343630303431393134323134343131A0 00780000E4994BFFF8CC323830303133393332363242313045440000000031324146000000003131332E39383835363432322E353931393537 3230323030393234303834353433 49 303131300231003C0258012C00000000000000000000003030303030369B5D
5B343630303431393134323134343131A0 00780000E4994BFFF8CC323630303133393332363242313241460000000031304544000000003131332E39383838313532322E353931393338 3230323030393235303533333033 49 303131300231003C0078012C00000000000000000000003030303030369D5D1A


========================================
2020.9.27
1.3008测试

5B343630303431393134323134343131A0 00780000E4994BFFF8CC323430303133393332363242313045440000000031324146000000003131332E39383837333932322E353931383435 3230323030393237303133393536 39 303131300131003C1C2004B00000000000000000000000303030303036925D1A

2.LXR0850测试
(1)根据测试说明进行测试
(2)红灯绿灯蜂鸣器正常测试
(3)需要使用7V以上电源
PB2 PB3电压正常变化

使用直流电源测试
5V以下设备无法正常使用
5V时 PB2 PB3为4.85V
6V时 PB2 PB3为5.2V(正常)
7V以上可以正常使用PB2 PB3
32V可正常使用


3.南昌枪支管理系统
网址:http://223.82.109.183:8087/qzdwpt
账号:fgsadmin360100304
密码:123456


测试管理系统
访问地址：http://121.69.131.203:8097/qzdwpt/ 
账号/密码:csqy/123456
上报地址：121.69.131.203:8098

========================================
2020.9.28
1.三火3008
版本号：LXR3008V312
(1)修复平台下发参数更改不成功bug；
(2)增加本地串口修改网络环境；
   修改----IPPORT:xxx.xxx.xxx.xxx:xxxx
   查询----IPPORT:???
   
P3 GPS
P1 GRRS

2.外出测试
三火卡号:
460041914214411
460044292608352
英菲信特卡号:
460041913919410

测试情况:
三火两台设备定位效果正常
英菲信特定位效果差,16:25出门后很长时间才定位成功

3.三火板新外壳充电灯不亮


5B343630303431393134323134343131A0 00780000E4994BFFF8CC323530303133393332363242313045440000000031324146000000003131332E39383837393232322E353931383339 3230323030393238303133363432 49 303131300231003C0258012C00000000000000000000003030303030367A5D


5B343630303434323932363038333532A0 00780000E0AB194B9327323730303133393332363242313045440000000031323942000000003131332E39383836383632322E353931393535 3230323030393238303830393134 48 30303130 02 31003C1C2004B00000000000000000000000303030303036AE5D1A
上报周期 02

========================================
2020.9.29
1.三火3008测试
IPPORT:121.069.131.203:8098
5B343630303434323932363038333135A0 00780000D779FEC1AAF2323830303133393332363242313045440000000031323942000000003131332E39383833373332322E353931383534 3030303030303030303030303030 4B 30303130 01 31003C1C200E100000000000000000000000303030303036515D1A
5B343630303434323932363038333135A0 00780000D779FEC1AAF2323730303133393332363242313045440000000031323942000000003131332E39383833383032322E353931383436 3030303030303030303030303030 3F 303031300131003C1C200E100000000000000000000000303030303036BA5D1A
5B343630303431393134323134343131A0 00780000E4994BFFF8CC323630303133393332363242313045440000000030453131000000003131332E39383837383532322E353931383536 3230323030393239303535333233 40 303031300131003C1C2004B00000000000000000000000303030303036C85D1A
5B343630303434323932363038333532A0 00780000E0AB194B9327323930303133393332363242313045440000000031304146000000003131332E39383835373932322E353931393832 3230323030393239303535303034 4A 303031300231003C1C2004B00000000000000000000000303030303036C65D1A

版本更新为V313 
修正使用LBS定位时时间不更新bug

外出测试
英菲信特板460041913919410	电量	81%  3.9V
三火板	460044292608352		电量	74%
		460041914214411	电量  	64%
		460044292608315		电量 	63%
		
========================================
2020.9.30		

三火板有一块无法充电

5B343630303431393134323134343131A0 00780000E4994BFFF8CC323930303133393332363242313241460000000031324145000000003131332E39383833323732322E353932303136 3230323030393330303534303534 30 303031300131003C1C2004B000000000000000000000003030303030367A5D1A
5B343630303434323932363038333532A0 00780000E0AB194B9327323430303133393332363242313239420000000030453246000000003131332E39383834343932322E353931393836 3230323030393330303534323033 49 303031300231003C1C2004B000000000000000000000003030303030361E5D1A
5B343630303431393134323134343131A0 00780000E4994BFFF8CC323930303133393332363242313045440000000031324145000000003131332E39383837363232322E353931393832 3230323030393330303730323338 44 303031300131003C1C2004B00000000000000000000000303030303036485D000000000000F237

IPPORT:121.069.131.203:8098
IPPORT:120.079.019.049:8090

http://121.69.131.203:8097/qzdwpt/  无法登录


========================================
2020.10.09
1.http://121.69.131.203:8097/qzdwpt/  无法登录
2.员工月度绩效考核表
3.假期400+条保存的记录发往120.79.19.49服务器

========================================
2020.10.10
1.9013谐波测试

06B5  485右A左B

测试49台设备,谐波含量均不为空,谐波数据长度均为6

========================================
2020.10.12
1.3008外出测试
4411 8352轨迹正常

2.3880安全加密芯片
	使用SM4算法
	目前测试只需使用HSF_DecryptInit和 HSF_Decrypt
防火墙正常关闭后,可使用SSH可连接linux设备

========================================
2020.10.13
1.9013编写串口工具用于开关谐波检测
打开谐波监测 68 xx xx xx xx xx xx 68 60 05 35 DF F1 FF DD xx 16 
关闭谐波监测68 xx xx xx xx xx xx 68 60 05 35 DF F1 FF 88 xx 16 

SerialPortV1.0	完成基本界面和功能,流水号只写了4位
SerialPortV1.1	流水号修改为6位,优化界面,流水号在一个输入框输入,需要输入空格

========================================
2020.10.14
1.9013串口工具
SerialPort
流水号输入需要反转,转为BCD码后转回16进制字符串需要补0

    //再将得到的校验码转换为16进制显示的字符串
    QString check = QString("%1").arg(checknum,2,16,QLatin1Char('0'));
	
SerialPortV1.2	流水号改为不需要输入空格的方式输入
SerialPortV1.3  流水号输入反转

2.0850读写模块API接口


